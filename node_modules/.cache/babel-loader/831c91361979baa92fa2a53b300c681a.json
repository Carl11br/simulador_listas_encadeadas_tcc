{"ast":null,"code":"import _toConsumableArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/ListPanel/ListPanel.jsx\",\n  _this2 = this;\nimport React, { useState, useRef, useEffect, createRef } from \"react\";\nimport styles from \"./ListPanel.module.css\";\nimport Element from \"../ListElement\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Seta from \"../../Seta.svg\";\nimport SetaVermelha from \"../../SetaVermelha.svg\";\nimport ControlPanel from \"../ControlPanel\";\nimport NullSymbol from \"../../NullSymbol.svg\";\nimport Xarrow, { Xwrapper, useXarrow } from \"react-xarrows\";\nimport { motion } from \"framer-motion/dist/framer-motion\";\nfunction createArrow(fromElement, toElement) {\n  var _this = this;\n  /**\n   * This function creates an arrow from one element to another in React.\n   * \n   * Parameters:\n   * fromElement (string): The ID of the element the arrow should start from\n   * toElement (string): The ID of the element the arrow should point to\n   * \n   * Returns:\n   * JSX.Element: The arrow component\n   */\n\n  // Define the arrow component\n  var Arrow = function Arrow() {\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"marker\", {\n      id: \"arrowhead\",\n      markerWidth: \"10\",\n      markerHeight: \"7\",\n      refX: \"0\",\n      refY: \"3.5\",\n      orient: \"auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"polygon\", {\n      points: \"0 0, 10 3.5, 0 7\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"line\", {\n      x1: fromElement.x,\n      y1: fromElement.y,\n      x2: toElement.x,\n      y2: toElement.y,\n      stroke: \"black\",\n      strokeWidth: \"2\",\n      markerEnd: \"url(#arrowhead)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  // Return the arrow component\n  return /*#__PURE__*/React.createElement(Arrow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  });\n}\nvar ListPanel = function ListPanel(_ref) {\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? \"\" : _ref$className,\n    _ref$listType = _ref.listType,\n    listType = _ref$listType === void 0 ? \"simple\" : _ref$listType;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    elementList = _useState2[0],\n    setElementList = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    renderedList = _useState4[0],\n    setRenderedList = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isInitialized = _useState6[0],\n    setIsInitialized = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    value = _useState8[0],\n    setValue = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    index = _useState10[0],\n    setIndex = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    element = _useState12[0],\n    setElement = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    valueToBeSearched = _useState14[0],\n    setValueToBeSearched = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    indexToBeSearched = _useState16[0],\n    setIndexToBeSearched = _useState16[1];\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    valueFound = _React$useState2[0],\n    setValueFound = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    animationStopped = _React$useState4[0],\n    setAnimationStopped = _React$useState4[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showNewElement = _useState18[0],\n    setShowNewElement = _useState18[1];\n  var _React$useState5 = React.useState(-1),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    currentItemIndex = _React$useState6[0],\n    setCurrentItemIndex = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    isSearchByIndex = _React$useState8[0],\n    setIsSearchByIndex = _React$useState8[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    insertButtonClicked = _useState20[0],\n    setInsertButtonClicked = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    removeButtonClicked = _useState22[0],\n    setRemoveButtonClicked = _useState22[1];\n  var _useState23 = useState(),\n    _useState24 = _slicedToArray(_useState23, 2),\n    newElementId = _useState24[0],\n    setNewElementId = _useState24[1];\n  var _useState25 = useState(),\n    _useState26 = _slicedToArray(_useState25, 2),\n    lastElementId = _useState26[0],\n    setLastElementId = _useState26[1];\n  var containerRef = useRef(null);\n  var elementRef = useRef(null);\n  useEffect(function () {\n    var container = containerRef.current;\n    var element = elementRef.current;\n    if (!container || !element) {\n      return;\n    }\n    var containerWidth = container.clientWidth;\n    var elementWidth = element.clientWidth;\n    if (elementWidth > containerWidth) {\n      var scrollAmount = elementWidth - containerWidth;\n      container.scrollTo({\n        left: scrollAmount,\n        behavior: 'smooth'\n      });\n    }\n  }, []);\n  React.useEffect(function () {\n    var intervalId;\n    var intervalDuration = 2000;\n    if (!valueFound && !animationStopped) {\n      intervalId = setInterval(function () {\n        setCurrentItemIndex(function (prevIndex) {\n          if (elementList.length > 0) {\n            var _index = prevIndex + 1;\n            if (_index >= elementList.length) {\n              console.log(\"O valor n√£o foi encontrado\");\n              setCurrentItemIndex(-1);\n              setAnimationStopped(true);\n            }\n            if (isSearchByIndex && _index == indexToBeSearched || elementList[_index] == valueToBeSearched) {\n              if (insertButtonClicked) {\n                setTimeout(function () {\n                  insertElement(_index, value);\n                  setInsertButtonClicked(false);\n                }, 1500);\n              }\n              if (removeButtonClicked) {\n                setTimeout(function () {\n                  if (isSearchByIndex) {\n                    removeElement(_index);\n                    console.log(\"O elemento foi removido por indice\");\n                  } else {\n                    removeElement(value, true);\n                    console.log(\"O elemento foi removido por valor\");\n                  }\n                  setRemoveButtonClicked(false);\n                }, 1500);\n              }\n              console.log(\"O valor foi encontrado\");\n              setValueFound(true);\n              setTimeout(function () {\n                setCurrentItemIndex(-1);\n              }, 2000);\n            }\n            return _index;\n          } else {\n            if (insertButtonClicked) {\n              setTimeout(function () {\n                insertElement(index, value);\n                setInsertButtonClicked(false);\n              }, 1500);\n            }\n            return 0;\n          }\n        });\n      }, intervalDuration);\n    }\n    return function () {\n      clearInterval(intervalId);\n      clearTimeout();\n    };\n  }, [elementList.length, valueToBeSearched, valueFound, animationStopped]);\n  var searchByValue = function searchByValue() {\n    setIsSearchByIndex(false);\n    setValueToBeSearched(value);\n    setValueFound(false);\n    setCurrentItemIndex(-1);\n    setAnimationStopped(false);\n  };\n  var searchByIndex = function searchByIndex(indexNum) {\n    setIsSearchByIndex(true);\n    indexNum ? setIndexToBeSearched(indexNum) : setIndexToBeSearched(index);\n    setValueFound(false);\n    setCurrentItemIndex(-1);\n    setAnimationStopped(false);\n  };\n  var auxPointerStyle = {\n    position: 'relative',\n    left: '10px',\n    textAlign: 'center'\n  };\n  var style = {\n    initialPosition: function initialPosition(inRelationToElementRef) {\n      console.log(inRelationToElementRef);\n      return {\n        display: \"block\",\n        position: \"absolute\",\n        top: \"\".concat(inRelationToElementRef.current ? inRelationToElementRef.current.getBoundingClientRect().top + inRelationToElementRef.current.getBoundingClientRect().height + 30 : 0, \"px\"),\n        left: \"\".concat(inRelationToElementRef.current ? inRelationToElementRef.current.getBoundingClientRect().left : 0, \"px\")\n      };\n    },\n    move: {}\n  };\n  var insertElement = function insertElement(indexToInsert, newValue) {\n    setElementList(function (prevState) {\n      var newList = _toConsumableArray(prevState);\n      if (indexToInsert === elementList.length - 1 && indexToInsert !== 0) {\n        newList.push(newValue);\n      } else {\n        newList.splice(indexToInsert, 0, newValue);\n      }\n      return newList;\n    });\n    if (indexToInsert === 0) {\n      containerRef.current.scrollTo({\n        x: 0,\n        animated: true\n      });\n    } else if (indexToInsert === elementList.length - 1) {\n      containerRef.current.scrollLeft = containerRef.current.scrollWidth;\n    }\n  };\n  var removeElement = function removeElement(indexOrValue) {\n    var isValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (isValue) {\n      console.log(\"aqui\");\n      setElementList(function (prevState) {\n        return prevState.filter(function (element) {\n          return element !== indexOrValue;\n        });\n      });\n    } else {\n      setElementList(function (prevState) {\n        var newList = _toConsumableArray(prevState);\n        newList.splice(indexOrValue, 1);\n        return newList;\n      });\n    }\n  };\n  var handleDrawArrow = function handleDrawArrow(startRef, endRef) {\n    return /*#__PURE__*/React.createElement(Arrow, {\n      startRef: startRef,\n      endRef: endRef,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    });\n  };\n  var handleExecution = function handleExecution(action, actionType) {\n    if (!isInitialized) {\n      throw new Error(\"List not initialized\");\n    }\n    if (action === \"insert\") {\n      switch (actionType) {\n        case \"start\":\n          setIndex(0);\n          setInsertButtonClicked(true);\n          searchByIndex(0);\n          break;\n        case \"end\":\n          setIndex(elementList.length - 1);\n          setInsertButtonClicked(true);\n          searchByIndex(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            setInsertButtonClicked(true);\n            searchByIndex(index);\n          } else {\n            throw new Error(\"Invalid action index\");\n          }\n          break;\n        case \"onValue\":\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    } else if (action === \"remove\") {\n      switch (actionType) {\n        case \"start\":\n          setIndex(0);\n          setRemoveButtonClicked(true);\n          searchByIndex(0);\n          break;\n        case \"end\":\n          setIndex(elementList.lenght - 1);\n          setRemoveButtonClicked(true);\n          searchByIndex(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            setRemoveButtonClicked(true);\n            searchByIndex(index);\n          } else {\n            throw new Error(\"Invalid index\");\n          }\n          break;\n        case \"onValue\":\n          if (elementList.length > 0) {\n            setRemoveButtonClicked(true);\n            ;\n            searchByValue(value);\n          } else {\n            throw new Error(\"Invalid Value\");\n          }\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    }\n  };\n  useEffect(function () {\n    var mountList = function mountList() {\n      switch (listType) {\n        case \"simple\":\n          return elementList.map(function (element, index) {\n            var newRef = createRef();\n            var id = uuidv4();\n            if (index === elementList.length - 1) {\n              setLastElementId(id);\n            }\n            return {\n              render: /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: Seta,\n                alt: \"seta\",\n                width: \"35px\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }\n              }), /*#__PURE__*/React.createElement(Element, {\n                content: element,\n                ref: newRef,\n                id: id,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }\n              })),\n              ref: newRef\n            };\n          });\n        default:\n          throw new Error(\"Invalid list type\");\n      }\n    };\n    setRenderedList(mountList());\n  }, [elementList, listType]);\n  var windowRef = useRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(className, \" \").concat(styles.listPanel),\n    ref: windowRef,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animateElement\",\n    style: {\n      display: showNewElement ? \"block\" : \"none\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      height: \"100%\",\n      width: \"100%\",\n      zIndex: 100\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, element), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listView,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, \"Simulador de Listas Encadeadas\"), /*#__PURE__*/React.createElement(Xwrapper, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listContainer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isInitialized ? \"flex\" : \"none\",\n      overflowX: \"auto\",\n      // Add CSS to make the container scrollable horizontally\n      whiteSpace: \"nowrap\" // Prevent line breaks for the child elements\n    },\n\n    ref: containerRef,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isInitialized ? \"flex\" : \"none\"\n    },\n    className: styles.listStart,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, \"In\\xEDcio\"), renderedList.map(function (element, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(motion.div, {\n      key: currentItemIndex,\n      initial: {\n        opacity: currentItemIndex === index ? 1 : 0\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: auxPointerStyle,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, \"Aux\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: SetaVermelha,\n      alt: \"seta\",\n      height: \"35px\",\n      style: auxPointerStyle,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    })), element.render);\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: NullSymbol,\n    alt: \"seta\",\n    width: \"100px\",\n    style: {\n      marginTop: 120\n    },\n    hidden: !isInitialized,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  })))), setNewElementId(uuidv4()), insertButtonClicked && /*#__PURE__*/React.createElement(motion.div, {\n    animate: {\n      opacity: 1\n    },\n    initial: {\n      opacity: 0\n    },\n    transition: {\n      duration: 1\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Element, {\n    content: value,\n    delayed: true,\n    id: newElementId,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controlPanel,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Insira o valor\",\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Insira o \\xEDndice\",\n    onChange: function onChange(e) {\n      return setIndex(e.target.value);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setIsInitialized(true);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }, \" Iniciar lista\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {},\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }\n  }, \" destruir lista\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"start\");\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no in\\xEDcio\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"end\");\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no fim\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"onIndex\");\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no \\xEDndice\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"remove\", \"onValue\");\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }\n  }, \" \", \"Remover por valor\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"remove\", \"onIndex\");\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, \" \", \"Remover por \\xEDndice\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return searchByValue();\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }\n  }, \" Buscar Elemento\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return searchByIndex();\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }\n  }, \" Buscar por Indice\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return createArrow(lastElementId, newElementId);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, \" Desenhar seta\")));\n};\nexport default ListPanel;","map":{"version":3,"names":["React","useState","useRef","useEffect","createRef","styles","Element","v4","uuidv4","ControlPanel","Xarrow","Xwrapper","useXarrow","motion","createArrow","fromElement","toElement","Arrow","x","y","ListPanel","className","listType","elementList","setElementList","renderedList","setRenderedList","isInitialized","setIsInitialized","value","setValue","index","setIndex","element","setElement","valueToBeSearched","setValueToBeSearched","indexToBeSearched","setIndexToBeSearched","valueFound","setValueFound","animationStopped","setAnimationStopped","showNewElement","setShowNewElement","currentItemIndex","setCurrentItemIndex","isSearchByIndex","setIsSearchByIndex","insertButtonClicked","setInsertButtonClicked","removeButtonClicked","setRemoveButtonClicked","newElementId","setNewElementId","lastElementId","setLastElementId","containerRef","elementRef","container","current","containerWidth","clientWidth","elementWidth","scrollAmount","scrollTo","left","behavior","intervalId","intervalDuration","setInterval","prevIndex","length","console","log","setTimeout","insertElement","removeElement","clearInterval","clearTimeout","searchByValue","searchByIndex","indexNum","auxPointerStyle","position","textAlign","style","initialPosition","inRelationToElementRef","display","top","getBoundingClientRect","height","move","indexToInsert","newValue","prevState","newList","push","splice","animated","scrollLeft","scrollWidth","indexOrValue","isValue","filter","handleDrawArrow","startRef","endRef","handleExecution","action","actionType","Error","lenght","mountList","map","newRef","id","render","alignItems","Seta","ref","windowRef","listPanel","width","zIndex","listView","listContainer","overflowX","whiteSpace","listStart","opacity","SetaVermelha","NullSymbol","marginTop","duration","controlPanel","e","target"],"sources":["/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/ListPanel/ListPanel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, createRef } from \"react\";\nimport styles from \"./ListPanel.module.css\";\nimport Element from \"../ListElement\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Seta from \"../../Seta.svg\";\nimport SetaVermelha from \"../../SetaVermelha.svg\";\nimport ControlPanel from \"../ControlPanel\";\nimport NullSymbol from \"../../NullSymbol.svg\";\nimport Xarrow, { Xwrapper, useXarrow } from \"react-xarrows\";\nimport { motion } from \"framer-motion/dist/framer-motion\";\n\nfunction createArrow(fromElement, toElement) {\n  /**\n   * This function creates an arrow from one element to another in React.\n   * \n   * Parameters:\n   * fromElement (string): The ID of the element the arrow should start from\n   * toElement (string): The ID of the element the arrow should point to\n   * \n   * Returns:\n   * JSX.Element: The arrow component\n   */\n  \n  // Define the arrow component\n  const Arrow = () => (\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\"\n                refX=\"0\" refY=\"3.5\" orient=\"auto\">\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n      <line x1={fromElement.x} y1={fromElement.y} x2={toElement.x} y2={toElement.y}\n            stroke=\"black\" strokeWidth=\"2\" markerEnd=\"url(#arrowhead)\" />\n    </svg>\n  );\n  \n  // Return the arrow component\n  return <Arrow />;\n}\n\nconst ListPanel = ({ className = \"\", listType = \"simple\" }) => {\n  const [elementList, setElementList] = useState([]);\n  const [renderedList, setRenderedList] = useState([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [index, setIndex] = useState(\"\");\n  const [element, setElement] = useState();\n  const [valueToBeSearched, setValueToBeSearched] = useState(\"\");\n  const [indexToBeSearched, setIndexToBeSearched] = useState(\"\");\n  const [valueFound, setValueFound] = React.useState(true);\n  const [animationStopped, setAnimationStopped] = React.useState(false);\n  const [showNewElement, setShowNewElement] = useState(false);\n  const [currentItemIndex, setCurrentItemIndex] = React.useState(-1);\n  const [isSearchByIndex, setIsSearchByIndex] = React.useState(false);\n  const [insertButtonClicked, setInsertButtonClicked] = useState(false);\n  const [removeButtonClicked, setRemoveButtonClicked] = useState(false);\n  const [newElementId, setNewElementId] = useState();\n  const [lastElementId, setLastElementId] = useState();\n  const containerRef = useRef(null);\n  const elementRef = useRef(null);\n  \n  \n  useEffect(() => {\n    const container = containerRef.current;\n    const element = elementRef.current;\n\n    if (!container || !element) {\n      return;\n    }\n\n    const containerWidth = container.clientWidth;\n    const elementWidth = element.clientWidth;\n\n    if (elementWidth > containerWidth) {\n      const scrollAmount = elementWidth - containerWidth;\n      container.scrollTo({ left: scrollAmount, behavior: 'smooth' });\n    }\n  }, []);\n\n  React.useEffect(() => {\n    let intervalId;\n    const intervalDuration = 2000;\n\n    if (!valueFound && !animationStopped) {\n      intervalId = setInterval(() => {\n        setCurrentItemIndex((prevIndex) => {\n          if (elementList.length > 0) {\n            const index = prevIndex + 1;\n\n            if (index >= elementList.length) {\n              console.log(\"O valor n√£o foi encontrado\");\n              setCurrentItemIndex(-1);\n              setAnimationStopped(true);\n            }\n\n            if ((isSearchByIndex && index == indexToBeSearched) || elementList[index] == valueToBeSearched) {\n              if (insertButtonClicked) {\n                setTimeout(() => {\n                  insertElement(index, value);\n                  setInsertButtonClicked(false);\n                }, 1500);\n              }\n\n              if (removeButtonClicked) {\n                setTimeout(() => {\n                  if (isSearchByIndex) {\n                    removeElement(index);\n                    console.log(\"O elemento foi removido por indice\");\n                  } else {\n                    removeElement(value, true);\n                    console.log(\"O elemento foi removido por valor\");\n                  }\n                  setRemoveButtonClicked(false);\n                }, 1500);\n              }\n\n              console.log(\"O valor foi encontrado\");\n              setValueFound(true);\n\n              setTimeout(() => {\n                setCurrentItemIndex(-1);\n              }, 2000);\n            }\n\n            return index;\n          } else {\n            if (insertButtonClicked) {\n              setTimeout(() => {\n                insertElement(index, value);\n                setInsertButtonClicked(false);\n              }, 1500);\n            }\n\n            return 0;\n          }\n        });\n      }, intervalDuration);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n      clearTimeout();\n    };\n  }, [elementList.length, valueToBeSearched, valueFound, animationStopped]);\n\n\n  const searchByValue = () => {\n    setIsSearchByIndex(false);\n    setValueToBeSearched(value)\n    setValueFound(false);\n    setCurrentItemIndex(-1)\n    setAnimationStopped(false);\n  }\n  const searchByIndex = (indexNum) => {\n    setIsSearchByIndex(true);\n    indexNum ? setIndexToBeSearched(indexNum) : setIndexToBeSearched(index);\n    setValueFound(false);\n    setCurrentItemIndex(-1)\n    setAnimationStopped(false);\n  }\n\n  const auxPointerStyle = {\n    position: 'relative',\n    left: '10px',\n    textAlign: 'center',\n  };\n\n\n  const style = {\n    initialPosition: (inRelationToElementRef) => {\n      console.log(inRelationToElementRef);\n      return {\n        display: \"block\",\n        position: \"absolute\",\n        top: `${inRelationToElementRef.current\n          ? inRelationToElementRef.current.getBoundingClientRect().top +\n          inRelationToElementRef.current.getBoundingClientRect().height +\n          30\n          : 0\n          }px`,\n        left: `${inRelationToElementRef.current\n          ? inRelationToElementRef.current.getBoundingClientRect().left\n          : 0\n          }px`,\n      };\n    },\n    move: {},\n  };\n\n  const insertElement = (indexToInsert, newValue) => {\n    setElementList((prevState) => {\n      const newList = [...prevState];\n      if (indexToInsert === elementList.length - 1 && indexToInsert !== 0) {\n        newList.push(newValue);\n      } else {\n        newList.splice(indexToInsert, 0, newValue);\n      }\n      return newList;\n    });\n    if (indexToInsert === 0) {\n      containerRef.current.scrollTo({\n        x: 0,\n        animated: true,\n      });\n    } else if (indexToInsert === elementList.length - 1) {\n      containerRef.current.scrollLeft = containerRef.current.scrollWidth;\n    }\n  };\n\n  const removeElement = (indexOrValue, isValue = false) => {\n    if (isValue) {\n      console.log(\"aqui\");\n      setElementList((prevState) =>\n        prevState.filter((element) => element !== indexOrValue)\n      );\n    } else {\n      setElementList((prevState) => {\n        const newList = [...prevState];\n        newList.splice(indexOrValue, 1);\n        return newList;\n      });\n    }\n  };\n  const handleDrawArrow = (startRef, endRef) => {\n    return (<Arrow startRef={startRef} endRef = {endRef}></Arrow>);\n  };\n  const handleExecution = (action, actionType) => {\n    if (!isInitialized) {\n      throw new Error(\"List not initialized\");\n    }\n    if (action === \"insert\") {\n      switch (actionType) {\n        case \"start\":\n          setIndex(0)\n          setInsertButtonClicked(true);\n          searchByIndex(0);\n          break;\n        case \"end\":\n          setIndex(elementList.length - 1);\n          setInsertButtonClicked(true);\n          searchByIndex(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            setInsertButtonClicked(true);\n            searchByIndex(index);\n          } else {\n            throw new Error(\"Invalid action index\");\n          }\n          break;\n        case \"onValue\":\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    } else if (action === \"remove\") {\n      switch (actionType) {\n        case \"start\":\n          setIndex(0)\n          setRemoveButtonClicked(true);\n          searchByIndex(0);\n          break;\n        case \"end\":\n          setIndex(elementList.lenght - 1)\n          setRemoveButtonClicked(true);\n          searchByIndex(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            setRemoveButtonClicked(true);\n            searchByIndex(index);\n          } else {\n            throw new Error(\"Invalid index\");\n          }\n          break;\n        case \"onValue\":\n          if (elementList.length > 0) {\n            setRemoveButtonClicked(true);;\n            searchByValue(value)\n          } else {\n            throw new Error(\"Invalid Value\");\n          }\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    const mountList = () => {\n      switch (listType) {\n        case \"simple\":\n          return elementList.map((element, index) => {\n            const newRef = createRef();\n            var id =  uuidv4()\n            if (index === elementList.length - 1) { setLastElementId(id)}\n            return {\n              render: (\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <img src={Seta} alt=\"seta\" width=\"35px\" />\n                  <Element content={element} ref={newRef} id={id} />\n                </div>\n\n              ),\n              ref: newRef,\n            };\n          });\n        default:\n          throw new Error(\"Invalid list type\");\n      }\n    };\n\n    setRenderedList(mountList());\n  }, [elementList, listType]);\n\n  const windowRef = useRef();\n\n  return (\n    <div className={`${className} ${styles.listPanel}`} ref={windowRef}>\n      <div\n        className=\"animateElement\"\n        style={{\n          display: showNewElement ? \"block\" : \"none\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          height: \"100%\",\n          width: \"100%\",\n          zIndex: 100,\n        }}\n      >\n        {element}\n      </div>\n      <div className={styles.listView}>\n        <h1>Simulador de Listas Encadeadas</h1>\n        <Xwrapper>\n          <div className={styles.listContainer}>\n            <div style={{\n              display: isInitialized ? \"flex\" : \"none\",\n              overflowX: \"auto\", // Add CSS to make the container scrollable horizontally\n              whiteSpace: \"nowrap\", // Prevent line breaks for the child elements\n            }}\n              ref={containerRef}>\n              <div\n                style={{ display: isInitialized ? \"flex\" : \"none\" }}\n                className={styles.listStart}\n              >\n                In√≠cio\n              </div>\n              {renderedList.map((element, index) => (\n                <div key={index}>\n                  <motion.div\n                  key = {currentItemIndex}\n                    initial={{ opacity: currentItemIndex === index ? 1: 0 }}>\n                    <div style={auxPointerStyle}>Aux</div>\n                    <img\n                      src={SetaVermelha}\n                      alt=\"seta\"\n                      height=\"35px\"\n                      style={auxPointerStyle}\n                    />\n                  </motion.div>\n                  {element.render}\n                </div>\n              ))}\n              <img\n                src={NullSymbol}\n                alt=\"seta\"\n                width=\"100px\"\n                style={{ marginTop: 120 }}\n                hidden={!isInitialized}\n              />\n            </div>\n          </div>\n        </Xwrapper>\n        {setNewElementId(uuidv4())}\n        {insertButtonClicked && <motion.div \n         animate={{ opacity: 1 }}\n         initial={{ opacity: 0 }}\n         transition={{ duration: 1 }}>\n          <Element content = {value} delayed = {true} id = {newElementId}/>\n        </motion.div>}\n      </div>\n      <div className={styles.controlPanel}>\n        <input\n          type=\"text\"\n          placeholder=\"Insira o valor\"\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Insira o √≠ndice\"\n          onChange={(e) => setIndex(e.target.value)}\n        />\n        <button onClick={() => setIsInitialized(true)}> Iniciar lista</button>\n        <button onClick={() => { }}> destruir lista</button>\n        <button onClick={() => handleExecution(\"insert\", \"start\")}>\n          {\" \"}\n          Inserir no in√≠cio\n        </button>\n        <button onClick={() => handleExecution(\"insert\", \"end\")}>\n          {\" \"}\n          Inserir no fim\n        </button>\n        <button onClick={() => handleExecution(\"insert\", \"onIndex\")}>\n          {\" \"}\n          Inserir no √≠ndice\n        </button>\n        <button onClick={() => handleExecution(\"remove\", \"onValue\")}>\n          {\" \"}\n          Remover por valor\n        </button>\n        <button onClick={() => handleExecution(\"remove\", \"onIndex\")}>\n          {\" \"}\n          Remover por √≠ndice\n        </button>\n        <button onClick={() => searchByValue()}> Buscar Elemento</button>\n        <button onClick={() => searchByIndex()}> Buscar por Indice</button>\n        <button onClick={() => createArrow(lastElementId, newElementId )}> Desenhar seta</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ListPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
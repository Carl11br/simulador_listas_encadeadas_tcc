{"version":3,"sources":["components/CodePanel/CodePanel.module.css","components/CodeWithGaps/CodeWithGaps.module.css","NullSymbol.svg","SetaVermelha.svg","components/CodePanel/Structs/Structs.module.css","SetaAzul.svg","components/ListPanel/ListPanel.module.css","Seta.svg","components/ListElement/Element.module.css","components/CodePanel/CodePanel.jsx","components/CodePanel/index.js","components/ListElement/index.js","components/ListElement/Element.jsx","components/Modal/Modal.jsx","components/Codes.js","components/CodeWithGaps/CodeWithGaps.jsx","components/CodeBuilderModal/CodeBuilderModal.jsx","components/ListPanel/ListPanel.jsx","components/ListPanel/index.js","App.js","reportWebVitals.js","index.js","components/Modal/Modal.module.css","components/ControlPanel/ControlPanel.module.css"],"names":["module","exports","codePanel","container","codebox","greenBorder","blueBorder","redBorder","currentRunning","codeWithGapsContainer","codeContainer","elementsContainer","fillBlankElement","__webpack_require__","p","structStructure","variableType","red","listPanel","listView","listContainer","listStart","controlPanel","actionButton","content","detailed","double","pointer","fromInitialPositionToRight","CodePanel","_ref","_ref$className","className","code","line","_useState","listType","typeOfIsert","delay","useState","_useState2","_slicedToArray","currentRunningIndex","setCurrentRunningIndex","_useState3","_useState4","codeToRun","setCodeToRun","useEffect","console","log","React","createElement","concat","styles","map","item","index","style","width","backgroundColor","key","Element","forwardRef","ref","_ref$isDouble","isDouble","_ref$isDetailed","isDetailed","_ref$style","_ref$delayed","delayed","_ref$interval","interval","showContent","setShowContent","timeoutId","setTimeout","clearTimeout","onClick","useXarrow","display","Modal","children","isOpen","onClose","title","_ref$width","_ref$height","height","modalRef","useRef","modal","e","current","target","contentContainer","header","closeBtn","CRIA_ELEMENTO_FUNCAO_SIMPLES","CodeWithGaps","gaps","finalCode","draggedGap","setDraggedGap","codeWithGaps","setCodeWithGaps","gapRefs","result","counter","forEach","gap","includes","gapPlaceholder","currentCode","correctCode","replace","replaceStrings","handleDragOver","event","preventDefault","handleDrop","gapIndex","gapElement","selectionStart","selectionEnd","currentValue","value","beforeSelection","substring","afterSelection","newValue","setSelectionRange","length","dispatchEvent","Event","bubbles","split","_line$split","_line$split2","remaining","parseInt","Fragment","el","type","draggable","readOnly","defaultValue","onDragOver","onDrop","onDragStart","dataTransfer","setData","handleDragStart","CodeBuilderModal","_ref$functionType","functionType","_ref$listType","onExecute","constraintsRef","functionOptions","initializeList","simple","STRUCT_SIMPLES","destroyList","searchElement","searchIndex","insertStart","insertEnd","insertIndex","removeValue","removeIndex","array","i","j","Math","floor","random","temp","shuffleArray","Error","alert","message","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ListPanel","_ref11","updateCode","updateLine","elementList","setElementList","renderedList","setRenderedList","_useState5","_useState6","isInitialized","setIsInitialized","_useState7","_useState8","setValue","_useState9","_useState10","setIndex","_useState11","_useState12","element","_useState13","_useState14","setValueToBeSearched","_useState15","_useState16","setIndexToBeSearched","_useState17","_useState18","setValueFound","_useState19","_useState20","setAnimationStopped","_useState21","_useState22","showNewElement","_useState23","_useState24","showDetailedElements","setShowDetailedElements","_useState25","_useState26","buildMode","setBuildMode","_useState27","_useState28","showBuildMode","setShowBuildMode","_useState29","_useState30","showNaturalLanguageExplanation","setShowNaturalLanguageExplanation","_useState31","_useState32","NaturalLanguageExplanation","setNaturalLanguageExplanation","_useState33","_useState34","currentItemIndex","setCurrentItemIndex","_useState35","_useState36","setIsSearchByIndex","_useState37","_useState38","setInsertButtonClicked","_useState39","_useState40","setRemoveButtonClicked","_useState41","_useState42","setFunctionType","_useState43","_useState44","modalPromise","setModalPromise","startRef","nullSymbolRef","_useState45","_useState46","_useState47","x","y","rotate","_useState48","animationQueue","_useState49","_useState50","_useState51","_useState52","animationSpeed","_useState53","_useState54","newElementAnimation","_useState55","_useState56","_useState57","_useState58","containerRef","elementRef","updateXarrow","_useState59","_useState60","_useState61","_useState62","currentAuxIndex","setCurrentAuxIndex","_useState63","_useState64","currentAntIndex","_useState65","elements","arrows","_useState66","renderNewWorkFlow","setRenderNewWorkFlow","_useState67","_useState68","linkingNewElement","setLinkingNewElement","_useState69","_useState70","_useState71","_useState72","_useState73","_useState74","containerWidth","clientWidth","elementWidth","scrollAmount","scrollTo","left","behavior","insereFun√ßaoSimples","animation","description","timer","searchByIndex","indexNum","promisedTimeout","_ref2","_asyncToGenerator","_callee","callback","_context","_x","_x2","apply","arguments","find","_ref4","_callee3","valueOrIndex","isValue","found","_context3","setInterval","clearInterval","_x4","_x5","updateReferenceInElement","newReference","prevState","newList","_toConsumableArray","pointerFromRef","handleAnimation","_ref5","_callee5","animationList","getAnimation","_iterator","_step","_context5","_ref6","_callee4","hasWaited","newPointerRef","newPointer","newElementRef","respPointerRef","respPointer","_newElement","arrow1","_context4","t0","createRef","render","position","top","getBoundingClientRect","bottom","newElement","uuidv4","Xarrow","start","end","color","path","startAnchor","endAnchor","newState","_objectSpread","newNullElementRef","newNullElement","src","NullSymbol","alt","arrow2","showHead","strokeWidth","splice","_cpy1Offset","_cpy2Offset","newArrow","_x9","_createForOfIteratorHelper","s","n","f","_x6","_x7","_x8","insertElement","indexToInsert","animated","scrollLeft","scrollWidth","handleExecution","_ref9","_callee9","action","actionType","openModal","_newElement2","_context9","_ref10","_callee8","_context8","t1","t2","t3","_x11","_x12","motion","div","layout","alignItems","marginLeft","initial","opacity","animate","exit","scale","transition","mountList","windowRef","overflowX","assign","Xwrapper","onScroll","minHeight","whiteSpace","_defineProperty","AnimatePresence","mode","zIndex","duration","repeat","Infinity","repeatType","SetaVermelha","SetaAzul","flexDirection","justifyContent","alignSelf","hidden","padding","boxSizing","id","onChange","textAlign","checked","htmlFor","placeholder","App","_React$useState","_React$useState2","setCode","_React$useState3","_React$useState4","setLine","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","controlActionContainer","actionCard","body","debounce"],"mappings":"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","file":"static/js/main.ecb4882c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"codePanel\":\"CodePanel_codePanel__3v1NL\",\"container\":\"CodePanel_container__3QXjc\",\"codebox\":\"CodePanel_codebox__1dkqr\",\"greenBorder\":\"CodePanel_greenBorder__1Q2D8\",\"blueBorder\":\"CodePanel_blueBorder__LsLX4\",\"redBorder\":\"CodePanel_redBorder__HV8Pv\",\"currentRunning\":\"CodePanel_currentRunning__ULO5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"codeWithGapsContainer\":\"CodeWithGaps_codeWithGapsContainer__3Uf67\",\"codeContainer\":\"CodeWithGaps_codeContainer__18NJO\",\"elementsContainer\":\"CodeWithGaps_elementsContainer__21p_t\",\"fillBlankElement\":\"CodeWithGaps_fillBlankElement__jg-4c\"};","module.exports = __webpack_public_path__ + \"static/media/NullSymbol.d6df818e.svg\";","module.exports = __webpack_public_path__ + \"static/media/SetaVermelha.172f1f87.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"structStructure\":\"Structs_structStructure__3MZl_\",\"variableType\":\"Structs_variableType__6fy-o\",\"red\":\"Structs_red__3QrWF\"};","module.exports = __webpack_public_path__ + \"static/media/SetaAzul.664766d7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listPanel\":\"ListPanel_listPanel__3EAgF\",\"listView\":\"ListPanel_listView__1WYHC\",\"listContainer\":\"ListPanel_listContainer__3nVoR\",\"listStart\":\"ListPanel_listStart__3ra85\",\"controlPanel\":\"ListPanel_controlPanel__1n5yg\",\"actionButton\":\"ListPanel_actionButton__2kMeb\"};","module.exports = __webpack_public_path__ + \"static/media/Seta.3bd292f5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Element_container__1vVux\",\"content\":\"Element_content__236ri\",\"detailed\":\"Element_detailed__2E26f\",\"double\":\"Element_double__DsQ1B\",\"pointer\":\"Element_pointer__xdHYO\",\"fromInitialPositionToRight\":\"Element_fromInitialPositionToRight__2G2sY\"};","import styles from './CodePanel.module.css';\nimport React, { useState, useEffect } from 'react';\nimport { SimpleLinkedList, DoubleLinkedList } from './Structs/Structs';\n\nconst linkedLists = {\n  simpleLinkedList: [\n    {\n      psdeudoCodigo: 'Criar um novo n√≥',\n      c√≥digo: 'int *novoElemento = (int *)malloc(sizeof(int));',\n    },\n    {\n      psdeudoCodigo: 'Atribuir o novo valor ao novo elemento',\n      c√≥digo: 'novoElemento->valor = novoValor;',\n    },\n    // inser√ß√£o no inicio;\n    {\n      psdeudoCodigo: 'inserir o novo elemento no inicio da lista',\n      c√≥digo:\n        'novoElemento->prox = listaInicial;<br>listaInicial = novoElemento;',\n    },\n    //inser√ß√£o no final\n    {\n      psdeudoCodigo: 'Achar o final da lista e inserir o novo elemento',\n      c√≥digo:\n        'lista *aux = listaInicial;<br>while (aux->prox != NULL) {<br>aux = aux->prox;<br>}<br>aux->prox = novoElemento;<br>novoElemento->prox = NULL;',\n    },\n  ],\n};\n\nfunction CodePanel({\n  className = '',\n  code,\n  line,\n  listType,\n  typeOfIsert,\n  delay = 1000,\n}) {\n  const [currentRunningIndex, setCurrentRunningIndex] = useState([]);\n  const [codeToRun, setCodeToRun] = useState([]);\n\n  useEffect(() => {\n    setCurrentRunningIndex(line || []);\n    console.log('line', line);\n  }, [line]);\n\n  useEffect(() => {\n    setCodeToRun(code || []);\n  }, [code]);\n\n  return (\n    <div className={`${className} ${styles.codePanel}`}>\n      <div className={`${styles.container} ${styles.blueBorder}`}>\n        <h5>C√≥digo sendo Executado</h5>\n        <pre className={styles.codebox}>\n          {codeToRun.map((item, index) => {\n            return (\n              <p\n                style={{\n                  width: '100%',\n                  backgroundColor:\n                    currentRunningIndex === index ? 'yellow' : '',\n                }}\n                key={`line-${index}`}\n              >\n                {item}\n              </p>\n            );\n          })}\n        </pre>\n      </div>\n    </div>\n  );\n}\n\nexport default CodePanel;\n","import CodePanel from \"./CodePanel\";\n\nexport default CodePanel;\n","import Element from \"./Element\";\n\nexport default Element;\n","import styles from './Element.module.css';\nimport React, { forwardRef, useEffect, useState } from 'react';\nimport { useXarrow } from 'react-xarrows';\n\nconst Element = forwardRef(\n  (\n    {\n      content,\n      isDouble = false,\n      isDetailed = false,\n      style = {},\n      className = {},\n      delayed = false,\n      interval = 3000,\n    },\n    ref\n  ) => {\n    const [showContent, setShowContent] = useState(false);\n\n    useEffect(() => {\n      if (delayed) {\n        const timeoutId = setTimeout(() => {\n          setShowContent(true);\n        }, interval);\n\n        return () => clearTimeout(timeoutId);\n      } else {\n        setShowContent(true);\n      }\n    }, [delayed]);\n\n    if (isDetailed) {\n      return (\n        <div\n          className={`${className} ${styles.container} ${styles.detailed} ${\n            isDouble ? styles.double : ''\n          }`}\n          ref={ref}\n          onClick={useXarrow()}\n        >\n          <div>\n            {showContent && <div className={styles.content}>{content}</div>}\n            {!showContent && <div className={styles.content}>{''}</div>}\n          </div>\n          <div style={{ display: isDouble ? 'block' : 'none' }}>\n            <div className={`${styles.pointer}`}>\n              <p>*ant</p>\n            </div>\n          </div>\n          <div>\n            <div className={`${styles.pointer}`}>\n              <p>*prox</p>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          style={style}\n          className={`${className} ${styles.container}`}\n          ref={ref}\n          onClick={useXarrow()}\n        >\n          {showContent && <div className={styles.content}>{content}</div>}\n          {!showContent && <div className={styles.content}>{''}</div>}\n        </div>\n      );\n    }\n  }\n);\n\nexport default Element;\n","import styles from './Modal.module.css';\nimport React from 'react';\nconst Modal = ({\n  children,\n  isOpen,\n  onClose,\n  title,\n  width = 500,\n  height = 500,\n}) => {\n  const modalRef = React.useRef(null);\n\n  const handleClose = (e) => {\n    if (modalRef.current === e.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      className={`${styles.modal} ${isOpen ? styles.isOpen : ''}`}\n      ref={modalRef}\n      onClick={handleClose}\n    >\n      <div\n        className={`${styles.contentContainer}`}\n        style={{ width: width, height: height }}\n      >\n        <div className={`${styles.header}`}>\n          <h1 className={`${styles.title}`}>{title}</h1>\n          <p className={`${styles.closeBtn}`} onClick={onClose}>\n            &times;\n          </p>\n        </div>\n        <div className={`${styles.content}`}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","//Trechos de c√≥digos extra√≠dos das apresenta√ß√µes de slides do profressor Andr√© Renato\nexport const STRUCT_SIMPLES = `\nstruct elemento{\n    int valor;\n    struct elemento *prox;\n};`\n\nexport const INICIA_LISTA_SIMPLES = `\nint main(void){\n    struct elemento *inicio;\n    inicio = CriaLista();\n    return 0;\n}\n`\n\nexport const CRIA_LISTA_FUNCAO_SIMPLES = `\nstruct elemento *CriaLista(){\n    return NULL;\n}`\n\nexport const CRIA_LISTA_USO_SIMPLES = `struct elemento *inicio;\ninicio = CriaLista();`\n\nexport const CRIA_ELEMENTO_FUNCAO_SIMPLES = `\nstruct elemento *CriaElemento(int numero){\n    struct elemento *resp = (struct elemento*) malloc(sizeof(struct elemento));\n    resp->valor = numero;\n    resp->prox = NULL;\n    return resp;\n}`\n\nexport const INSERE_INICIO_FUNCAO_SIMPLES = `\nstruct elemento *InsereInicio(elemento *lista, int numero){\n    struct elemento *novo = CriaElemento(numero);\n    novo->prox = lista;\n    lista = novo;\n    return lista;\n}`\n\nexport const INSERE_FIM_FUNCAO_SIMPLES = `\nstruct elemento *InsereFim(struct elemento *lista, int numero){\n    struct elemento *aux;\n    struct elemento *novo = CriaElemento(numero);\n    if (lista == NULL){\n        lista = novo;\n    }\n    else{\n        aux = lista;\n        while (aux->prox != NULL)\n            aux = aux->prox;\n        aux->prox = novo;\n    }\n    return lista;\n}`\n\nexport const INSERE_INDICE_FUNCAO_SIMPLES = `\nstruct elemento *InsereIndice(struct elemento *lista, int numero, int indice) {\n    struct elemento *aux;\n    struct elemento *ant;\n    struct elemento *novo = CriaElemento(numero);\n    int indiceAtual = 1;\n    if (lista == NULL) \n    {\n      lista = novo;\n    } \n    else if (indice == 0) \n    {\n      novo->prox = lista;\n      lista = novo;\n    } \n    else {\n      aux = lista->prox;\n      ant = lista;\n      while (aux != NULL && indiceAtual != indice) \n      {\n        ant = aux;\n        aux = aux->prox;\n        indiceAtual++;\n      }\n      if (indiceAtual == indice) \n      {\n        ant->prox = novo;\n        novo->prox = aux;\n      }\n    }\n    return lista;\n  }`\n\nexport const BUSCA_FUNCAO_SIMPLES = `\nstruct elemento *BuscaElemento(struct elemento *lista, int numero){\n    struct elemento *aux = lista;\n    while (aux != NULL && aux->valor != numero)\n        aux = aux->prox;\n    return aux;\n}`\n\nexport const BUSCA_FUNCAO_SIMPLES_INDICE = `\nstruct elemento *BuscaIndice(struct elemento *lista, int indice){\n    int indiceAtual = 0;\n    struct elemento *aux = lista;\n    while (aux != NULL && indiceAtual != indice){\n        aux = aux->prox;\n        indiceAtual++;\n    return aux;\n}`\n\nexport const REMOVE_FUNCAO_SIMPLES = `\nstruct elemento *RemovePorValor(struct elemento *lista, int numero){\n    if (lista == NULL) return NULL;\n    struct elemento *ant = lista;\n    struct elemento *aux = ant->prox;\n    if (ant->valor == numero){\n        lista = aux;\n        free(ant);\n    }\n    else{\n        while (aux != NULL && aux->valor != numero){\n            ant = aux;\n            aux = aux->prox;\n        }\n        if (aux != NULL){\n            ant->prox = aux->prox;\n            free(aux);\n        }\n    }\n    return lista;\n}`\n\nexport const REMOVE_FUNCAO_SIMPLES_INDICE = `\nstruct elemento *RemovePorIndice(struct elemento *lista, int indice){\n    if (lista == NULL) return NULL;\n    int indiceAtual = 1;\n    struct elemento *ant = lista;\n    struct elemento *aux = ant->prox;\n    if (indice == 0){\n        lista = aux;\n        free(ant);\n    }\n    else{\n        while (aux != NULL && indiceAtual != indice){\n            ant = aux;\n            aux = aux->prox;\n            indiceAtual++;\n        }\n        if (aux != NULL){\n            ant->prox = aux->prox;\n            free(aux);\n        }\n    }\n    return lista;\n}`\n\nexport const DESTROI_LISTA_FUNCAO_SIMPLES = `\nstruct elemento *DestroiLista(struct elemento *lista){\n    struct elemento *aux;\n    while (lista != NULL){\n        aux = lista->prox;\n        free(lista);\n        lista = aux;\n    }\n    return NULL;\n}`\n\n","import React, { useEffect, useRef, useState } from 'react';\nimport styles from './CodeWithGaps.module.css';\n\nconst CodeWithGaps = ({ code, gaps, finalCode }) => {\n  const [draggedGap, setDraggedGap] = useState('');\n  const [codeWithGaps, setCodeWithGaps] = useState('');\n  const gapRefs = useRef([]);\n\n  const replaceStrings = (code, gaps) => {\n    let result = code;\n    let counter = 0;\n    finalCode.current = [];\n    gaps.forEach((gap) => {\n      while (result.includes(gap)) {\n        const gapPlaceholder = `{{${counter}}}`;\n        finalCode.current[counter] = {\n          currentCode: '',\n          correctCode: gap,\n        };\n        counter++;\n        result = result.replace(gap, gapPlaceholder);\n      }\n    });\n    return result;\n  };\n\n  useEffect(() => {\n    setCodeWithGaps(replaceStrings(code, gaps));\n  }, []);\n\n  const handleDragStart = (event, gap) => {\n    event.dataTransfer.setData('text/plain', gap);\n    setDraggedGap(gap);\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const handleDrop = (event, gapIndex) => {\n    event.preventDefault();\n    const gapElement = gapRefs.current[gapIndex];\n    const selectionStart = gapElement.selectionStart;\n    const selectionEnd = gapElement.selectionEnd;\n\n    const currentValue = gapElement.value;\n    const beforeSelection = currentValue.substring(0, selectionStart);\n    const afterSelection = currentValue.substring(selectionEnd);\n\n    const newValue = beforeSelection + draggedGap + afterSelection;\n    gapElement.value = newValue;\n    gapElement.setSelectionRange(\n      selectionStart,\n      selectionStart + draggedGap.length\n    );\n\n    finalCode.current[gapIndex].currentCode = newValue;\n    gapElement.dispatchEvent(new Event('input', { bubbles: true }));\n    setDraggedGap('');\n  };\n\n  return (\n    <div className={`${styles.codeWithGapsContainer} container h-100`}>\n      <div className=\"row h-100\">\n        <pre className={`col-8 col-md-10 ${styles.codeContainer} h-100`}>\n          <code>\n            {/* ...existing code... */}\n            {codeWithGaps.split('{{').map((line, index) => {\n              if (line.includes('}}')) {\n                const [gapIndex, remaining] = line.split('}}');\n                const gap = gaps[parseInt(gapIndex)];\n                return (\n                  <React.Fragment key={index}>\n                    <input\n                      ref={(el) => (gapRefs.current[parseInt(gapIndex)] = el)}\n                      type=\"text\"\n                      draggable=\"false\"\n                      readOnly\n                      defaultValue=\"\"\n                      onDragOver={handleDragOver} // Add onDragOver event handler\n                      onDrop={(e) => handleDrop(e, parseInt(gapIndex))} // Add onDrop event handler\n                    />\n                    {remaining}\n                  </React.Fragment>\n                );\n              }\n              return line;\n            })}\n          </code>\n        </pre>\n        <div className={`col-4 col-md-2 ${styles.elementsContainer} h-100`}>\n          {gaps.map((gap, index) => (\n            <div\n              key={index}\n              draggable=\"true\"\n              onDragStart={(e) => handleDragStart(e, gap)}\n              onDragOver={handleDragOver}\n              onDrop={(e) => handleDrop(e, index)}\n              className={`${styles.fillBlankElement}`}\n            >\n              {gap}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodeWithGaps;\n","import React from 'react';\nimport { useRef } from 'react';\nimport Modal from '../Modal/Modal';\nimport {\n  BUSCA_FUNCAO_SIMPLES,\n  BUSCA_FUNCAO_SIMPLES_INDICE,\n  CRIA_ELEMENTO_FUNCAO_SIMPLES,\n  CRIA_LISTA_FUNCAO_SIMPLES,\n  CRIA_LISTA_USO_SIMPLES,\n  DESTROI_LISTA_FUNCAO_SIMPLES,\n  INSERE_FIM_FUNCAO_SIMPLES,\n  INSERE_INDICE_FUNCAO_SIMPLES,\n  INSERE_INICIO_FUNCAO_SIMPLES,\n  REMOVE_FUNCAO_SIMPLES,\n  REMOVE_FUNCAO_SIMPLES_INDICE,\n  STRUCT_SIMPLES,\n} from '../Codes';\n\nimport CodeWithGaps from '../CodeWithGaps/CodeWithGaps';\nconst CodeBuilderModal = ({\n  isOpen,\n  onClose,\n  functionType = 'insertStart',\n  listType = 'simple',\n  onExecute,\n}) => {\n  const constraintsRef = useRef(null);\n  const finalCode = useRef(null);\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n\n  const functionOptions = {\n    initializeList: {\n      simple: {\n        code:\n          STRUCT_SIMPLES +\n          '\\n' +\n          CRIA_LISTA_FUNCAO_SIMPLES +\n          '\\n' +\n          CRIA_LISTA_USO_SIMPLES,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n    destroyList: {\n      simple: {\n        code: DESTROI_LISTA_FUNCAO_SIMPLES,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n    searchElement: {\n      simple: {\n        code: BUSCA_FUNCAO_SIMPLES,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n    searchIndex: {\n      simple: {\n        code: BUSCA_FUNCAO_SIMPLES_INDICE,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n    insertStart: {\n      simple: {\n        code:\n          CRIA_ELEMENTO_FUNCAO_SIMPLES + '\\n' + INSERE_INICIO_FUNCAO_SIMPLES,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n    insertEnd: {\n      simple: {\n        code: CRIA_ELEMENTO_FUNCAO_SIMPLES + '\\n' + INSERE_FIM_FUNCAO_SIMPLES,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n    insertIndex: {\n      simple: {\n        code:\n          CRIA_ELEMENTO_FUNCAO_SIMPLES + '\\n' + INSERE_INDICE_FUNCAO_SIMPLES,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n    removeValue: {\n      simple: {\n        code: REMOVE_FUNCAO_SIMPLES,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n    removeIndex: {\n      simple: {\n        code: REMOVE_FUNCAO_SIMPLES_INDICE,\n        gaps: ['malloc', `novo->valor`, 'sizeof', 'realloc', 'lista'],\n      },\n    },\n  };\n\n  const verifyCode = () => {\n    finalCode.current.forEach((code) => {\n      if (code.currentCode !== code.correctCode) {\n        throw new Error('C√≥digo incorreto!');\n      }\n    });\n  };\n\n  const handleExecution = () => {\n    try {\n      verifyCode();\n      onExecute();\n      onClose();\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      width=\"80%\"\n      height=\"80%\"\n      title={'Preencha as lacunas!'}\n    >\n      <div className=\"container h-100\">\n        <div className=\"row h-100\" ref={constraintsRef}>\n          <div className=\"col-12 h-100\">\n            <CodeWithGaps\n              code={functionOptions[functionType][listType].code}\n              gaps={shuffleArray(functionOptions[functionType][listType].gaps)}\n              finalCode={finalCode}\n            />\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-12 text-end\">\n            <button className=\"btn btn-success\" onClick={handleExecution}>\n              Executar\n            </button>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default CodeBuilderModal;\n","import React, { useState, useRef, useEffect, createRef } from 'react';\nimport styles from './ListPanel.module.css';\nimport Element from '../ListElement';\nimport { v4 as uuidv4 } from 'uuid';\nimport Seta from '../../Seta.svg';\nimport NullSymbol from '../../NullSymbol.svg';\nimport { ScrollView } from 'react-native';\nimport CodeBuilderModal from '../CodeBuilderModal/CodeBuilderModal';\nimport SetaVermelha from '../../SetaVermelha.svg';\nimport SetaAzul from '../../SetaAzul.svg';\nimport ControlPanel from '../ControlPanel';\nimport Xarrow, { Xwrapper, useXarrow } from 'react-xarrows';\nimport { motion, AnimatePresence } from 'framer-motion/dist/framer-motion';\n\nconst ListPanel = ({\n  className = '',\n  listType = 'simple',\n  updateCode,\n  updateLine,\n}) => {\n  const [elementList, setElementList] = useState([]);\n  const [renderedList, setRenderedList] = useState([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [value, setValue] = useState('');\n  const [index, setIndex] = useState('');\n  const [element, setElement] = useState();\n  const [valueToBeSearched, setValueToBeSearched] = useState('');\n  const [indexToBeSearched, setIndexToBeSearched] = useState('');\n  const [valueFound, setValueFound] = useState(true);\n  const [animationStopped, setAnimationStopped] = useState(false);\n  const [showNewElement, setShowNewElement] = useState(false);\n  const [showDetailedElements, setShowDetailedElements] = useState(false);\n  const [buildMode, setBuildMode] = useState(false);\n  const [showBuildMode, setShowBuildMode] = useState(false);\n  const [showNaturalLanguageExplanation, setShowNaturalLanguageExplanation] =\n    useState(false);\n  const [NaturalLanguageExplanation, setNaturalLanguageExplanation] =\n    useState('');\n  const [currentItemIndex, setCurrentItemIndex] = useState(-1);\n  const [isSearchByIndex, setIsSearchByIndex] = useState(false);\n  const [insertButtonClicked, setInsertButtonClicked] = useState(false);\n  const [removeButtonClicked, setRemoveButtonClicked] = useState(false);\n  const [functionType, setFunctionType] = useState('insertStart');\n  const [modalPromise, setModalPromise] = useState(null);\n  const referenceList = useRef([]);\n  const startRef = useRef();\n  const nullSymbolRef = useRef();\n  const [itens, setItens] = useState([1, 2, 3, 4]);\n  const [animationQueue, setAnimationQueue] = useState([\n    {\n      x: 50,\n      y: 50,\n      rotate: 50,\n    },\n    {\n      x: -25,\n      y: -25,\n      rotate: -25,\n    },\n  ]);\n  const [animationState, setAnimationState] = useState(animationQueue[0]);\n  const [animationSpeed, setAnimationSpeed] = useState(1500);\n\n  //new element\n  const [newElementAnimation, setNewElementAnimation] = useState(false);\n  // end new element\n  //start searching element and animation\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchingAnimation, setSearchingAnimation] = useState({});\n  // end searching animation\n\n  const containerRef = useRef(null);\n  const elementRef = useRef(null);\n  const updateXarrow = useXarrow();\n\n  const [optionalRender, setOptionalRender] = useState(<></>);\n\n  //----------------- my new states -----------------\n  const [currentAuxIndex, setCurrentAuxIndex] = useState(null);\n  const [currentAntIndex, setCurrentAntIndex] = useState(null);\n  const [renderNewWorkFlow, setRenderNewWorkFlow] = useState({\n    elements: [],\n    arrows: [],\n  });\n  const [linkingNewElement, setLinkingNewElement] = useState(false);\n  const [showNewPointer, setShowNewPointer] = useState(0);\n  const [showRespPointer, setShowRespPointer] = useState(0);\n  const [newElement, setNewElement] = useState(0);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    const element = elementRef.current;\n\n    if (!container || !element) {\n      return;\n    }\n\n    const containerWidth = container.clientWidth;\n    const elementWidth = element.clientWidth;\n\n    if (elementWidth > containerWidth) {\n      const scrollAmount = elementWidth - containerWidth;\n      container.scrollTo({ left: scrollAmount, behavior: 'smooth' });\n    }\n  }, []);\n\n  useEffect(() => {\n    // setInterval(() => {\n    //   updateXarrow();\n    // }, 500);\n  }, []);\n\n  const insereFun√ßaoSimples = {\n    executionOrder: [\n      {\n        line: 6,\n        animation: '',\n        description:\n          'A fun√ß√£o \"InsereInicio\" recebe o ponteiro para a lista e o valor a ser inserido como par√¢metros. Ela retornar√° a lista com o novo elemento;',\n      },\n      {\n        line: 7,\n        animation: 'createNewPointer',\n        description:\n          'O ponteiro(*) \"novo\" √© declarado e chama a fun√ß√£o \"CriarElemento\" passando o valor recebido como par√¢metro.',\n      },\n      {\n        line: 0,\n        animation: '',\n        description:\n          'A fun√ß√£o \"CriarElemento\" recebe um valor e retorna um ponteiro para o novo elemento criado.',\n      },\n      {\n        line: 1,\n        animation: 'createNewElement',\n        description:\n          'O ponteiro(*) \"resp\" √© declarado e recebe o endere√ßo de mem√≥ria alocado para o novo elemento.',\n      },\n      {\n        line: 2,\n        animation: 'attributeValueToNewElement',\n        description:\n          'Atrav√©s do ponteiro \"resp\" √© atribu√≠do ao novo elemento o valor recebido.',\n      },\n      {\n        line: 3,\n        animation: 'pointNewElementToNull',\n        description:\n          'Atrav√©s do ponteiro \"resp\" √© atribu√≠do ao novo elemento o pr√≥ximo elemento (que at√© o momento √© NULL).',\n      },\n      {\n        line: 4,\n        animation: 'pointNewPointerToNewElement',\n        description:\n          'O ponteiro \"resp\" (que aponta para o novo elemento) √© retornado pela fun√ß√£o \"CriarElemento\".',\n      },\n      { line: 5, animation: '', timer: 500 },\n      {\n        line: 8,\n        animation: 'pointNewElementToStart',\n        description:\n          'Agora que o ponteiro \"novo\" recebeu o novo elemento e como estamos inserindo no in√≠cio da lista, diremos que o pr√≥ximo elemento ap√≥s o novo elemento vai ser o atual primeiro elemento da lista.',\n      },\n      {\n        line: 9,\n        animation: 'pointStartToNewElement',\n        description:\n          'Depois disso, diremos que o primeiro elemento da lista vai ser o novo elemento.',\n      },\n      {\n        line: 10,\n        animation: '',\n        description:\n          'Por fim, retornamos a lista j√° com o novo elemento inserido.',\n      },\n      { line: 11, animation: '', timer: 500 },\n    ],\n\n    code: [\n      'struct elemento *CriaElemento(int numero){',\n      '   struct elemento *resp = (struct elemento*) malloc(sizeof(struct elemento));',\n      '   resp->valor = numero;',\n      '   resp->prox = NULL;',\n      '   return resp;',\n      '}',\n      'struct elemento *InsereInicio(elemento *lista, int numero){',\n      '   struct elemento *novo = CriaElemento(numero);',\n      '   novo->prox = lista;',\n      '   lista = novo;',\n      '   return lista;',\n      '}',\n    ],\n  };\n\n  // useEffect(() => {\n  //   let intervalId;\n  //   const intervalDuration = 2000;\n\n  //   if (!valueFound && !animationStopped) {\n  //     intervalId = setInterval(() => {\n  //       setCurrentItemIndex((prevIndex) => {\n  //         if (elementList.length > 0) {\n  //           const index = prevIndex + 1;\n  //           console.log('index: ' + index);\n  //           if (index >= elementList.length) {\n  //             console.log('O valor n√£o foi encontrado');\n  //             setCurrentItemIndex(-1);\n  //             setAnimationStopped(true);\n  //           }\n  //           if (\n  //             (isSearchByIndex && index == indexToBeSearched) ||\n  //             elementList[index] == valueToBeSearched\n  //           ) {\n  //             if (insertButtonClicked) {\n  //               setTimeout(() => {\n  //                 insertElement(index, value);\n  //                 setInsertButtonClicked(false);\n  //               }, 1500);\n  //             }\n\n  //             if (removeButtonClicked) {\n  //               setTimeout(() => {\n  //                 if (isSearchByIndex) {\n  //                   removeElement(index);\n  //                   console.log('O elemento foi removido por indice');\n  //                 } else {\n  //                   removeElement(value, true);\n  //                   console.log('O elemento foi removido por valor');\n  //                 }\n  //                 setRemoveButtonClicked(false);\n  //               }, 1500);\n  //             }\n\n  //             console.log('O valor foi encontrado');\n  //             setValueFound(true);\n\n  //             setTimeout(() => {\n  //               setCurrentItemIndex(-1);\n  //             }, 2000);\n  //           }\n\n  //           return index;\n  //         } else {\n  //           if (insertButtonClicked) {\n  //             setTimeout(() => {\n  //               insertElement(index, value);\n  //               setInsertButtonClicked(false);\n  //             }, 1500);\n  //           }\n\n  //           return 0;\n  //         }\n  //       });\n  //     }, intervalDuration);\n  //   }\n\n  //   return () => {\n  //     clearInterval(intervalId);\n  //     clearTimeout();\n  //   };\n  // }, [elementList.length, valueToBeSearched, valueFound, animationStopped]);\n\n  const searchByValue = () => {\n    setIsSearchByIndex(false);\n    setValueToBeSearched(value);\n    setValueFound(false);\n    setCurrentItemIndex(-1);\n    setAnimationStopped(false);\n  };\n  const searchByIndex = (indexNum) => {\n    setIsSearchByIndex(true);\n    indexNum ? setIndexToBeSearched(indexNum) : setIndexToBeSearched(index);\n    setValueFound(false);\n    setCurrentItemIndex(-1);\n    setAnimationStopped(false);\n  };\n\n  const auxPointerStyle = {\n    position: 'relative',\n    left: '10px',\n    textAlign: 'center',\n  };\n\n  const style = {\n    initialPosition: (inRelationToElementRef) => {\n      console.log(inRelationToElementRef);\n      return {\n        display: 'block',\n        position: 'absolute',\n        top: `${\n          inRelationToElementRef.current\n            ? inRelationToElementRef.current.getBoundingClientRect().top +\n              inRelationToElementRef.current.getBoundingClientRect().height +\n              30\n            : 0\n        }px`,\n        left: `${\n          inRelationToElementRef.current\n            ? inRelationToElementRef.current.getBoundingClientRect().left\n            : 0\n        }px`,\n      };\n    },\n    move: {},\n  };\n\n  const promisedTimeout = async (timer, callback) => {\n    await new Promise((resolve) => {\n      setTimeout(() => {\n        resolve();\n      }, timer);\n    });\n  };\n\n  const promisedInterval = async (callback) => {\n    await new Promise((resolve) => {\n      setInterval(() => {\n        callback(resolve);\n      }, animationSpeed);\n    });\n  };\n\n  const createNewPointer = () => {};\n\n  const find = async (valueOrIndex, isValue) => {\n    let found = false;\n    let index = 0;\n    setCurrentAuxIndex(index);\n    await new Promise((resolve) => {\n      const interval = setInterval(() => {\n        if (currentAuxIndex == 'nullElement') {\n          clearInterval(interval);\n          resolve();\n        }\n        console.log('currentAuxIndex: ', currentAuxIndex);\n        found = isValue\n          ? elementList[index].value == valueOrIndex\n          : index == valueOrIndex;\n        if (!found) {\n          index = index + 1 < elementList.length ? index + 1 : 'nullElement';\n          setCurrentAuxIndex(index);\n        } else {\n          found = elementList[currentAuxIndex];\n          clearInterval(interval);\n          resolve();\n        }\n      }, animationSpeed);\n      return found || null;\n    });\n  };\n\n  const updateReferenceInElement = (index, newReference) => {\n    setElementList((prevState) => {\n      const newList = [...prevState];\n      newList[index].pointerFromRef = newReference;\n      return newList;\n    });\n  };\n\n  const handleAnimation = async (animationList, value, index) => {\n    const getAnimation = async (animation) => {\n      updateLine(animation.line);\n      setNaturalLanguageExplanation(animation.description || '');\n      let hasWaited = false;\n      switch (animation.animation) {\n        case 'createNewPointer':\n          const newPointerRef = createRef();\n          const newPointer = {\n            render: (\n              <div\n                style={{\n                  display: 'flex',\n                  position: 'absolute',\n                  top: startRef.current.getBoundingClientRect().bottom + 100,\n                  left: startRef.current.getBoundingClientRect().left,\n                }}\n                className={styles.listStart}\n                ref={newPointerRef}\n                key=\"newPointer-animation\"\n              >\n                *Novo\n              </div>\n            ),\n            ref: newPointerRef,\n          };\n          setRenderNewWorkFlow((prevState) => ({\n            elements: [...prevState.elements, newPointer],\n            arrows: [...prevState.arrows],\n          }));\n          break;\n        case 'createNewElement':\n          let newElementRef = createRef();\n          let respPointerRef = createRef();\n          let respPointer = {\n            render: (\n              <div\n                style={{\n                  display: 'flex',\n                  position: 'absolute',\n                  top: startRef.current.getBoundingClientRect().bottom + 250,\n                  left: startRef.current.getBoundingClientRect().left + 200,\n                }}\n                className={styles.listStart}\n                ref={respPointerRef}\n                key=\"respPointer-animation\"\n              >\n                *Resp\n              </div>\n            ),\n            ref: respPointerRef,\n          };\n          let newElement = {\n            render: (\n              <Element\n                style={{\n                  position: 'absolute',\n                  top: startRef.current.getBoundingClientRect().bottom + 100,\n                  left: startRef.current.getBoundingClientRect().left + 200,\n                }}\n                isDetailed={showDetailedElements}\n                content=\"\"\n                ref={newElementRef}\n                key={uuidv4()}\n              />\n            ),\n            ref: newElementRef,\n          };\n          let arrow1 = {\n            render: (\n              <Xarrow\n                start={respPointer.ref}\n                end={newElement.ref}\n                color=\"red\"\n                path=\"straight\"\n                startAnchor=\"top\"\n                endAnchor=\"bottom\"\n                key={uuidv4()}\n              />\n            ),\n          };\n          setRenderNewWorkFlow((prevState) => ({\n            elements: [...prevState.elements, respPointer, newElement],\n            arrows: [...prevState.arrows, arrow1],\n          }));\n          break;\n        case 'attributeValueToNewElement':\n          setRenderNewWorkFlow((prevState) => {\n            const newState = { ...prevState };\n            newState.elements[2].ref = createRef();\n            newState.elements[2].render = (\n              <Element\n                style={{\n                  position: 'absolute',\n                  top: startRef.current.getBoundingClientRect().bottom + 100,\n                  left: startRef.current.getBoundingClientRect().left + 200,\n                }}\n                isDetailed={showDetailedElements}\n                content={value.value}\n                ref={newState.elements[2].ref}\n                key={uuidv4()}\n              />\n            );\n            newState.arrows[0].render = (\n              <Xarrow\n                start={newState.elements[1].ref}\n                end={newState.elements[2].ref}\n                color=\"red\"\n                path=\"straight\"\n                startAnchor=\"top\"\n                endAnchor=\"bottom\"\n                key={uuidv4()}\n              />\n            );\n            return newState;\n          });\n          break;\n        case 'pointNewElementToNull':\n          setRenderNewWorkFlow((prevState) => {\n            const newState = { ...prevState };\n            let newNullElementRef = createRef();\n            const newNullElement = {\n              render: (\n                <img\n                  src={NullSymbol}\n                  alt=\"seta\"\n                  width=\"100px\"\n                  style={{\n                    position: 'absolute',\n                    top: startRef.current.getBoundingClientRect().bottom + 200,\n                    left: startRef.current.getBoundingClientRect().left + 350,\n                  }}\n                  ref={newNullElementRef}\n                  key=\"newNullElement-animation\"\n                />\n              ),\n              ref: newNullElementRef,\n            };\n            let arrow2 = {\n              render: (\n                <Xarrow\n                  start={newState.elements[2].ref}\n                  end={newNullElement.ref}\n                  color=\"red\"\n                  path=\"grid\"\n                  showHead={false}\n                  strokeWidth={6}\n                  startAnchor=\"right\"\n                  endAnchor=\"top\"\n                  key={uuidv4()}\n                />\n              ),\n            };\n            return {\n              elements: [...newState.elements, newNullElement],\n              arrows: [...newState.arrows, arrow2],\n            };\n          });\n          break;\n        case 'pointNewPointerToNewElement':\n          setRenderNewWorkFlow((prevState) => {\n            const newState = { ...prevState };\n            newState.elements.splice(1, 1);\n            newState.elements[2].ref = createRef();\n            newState.elements[2].render = (\n              <>\n                <img\n                  src={NullSymbol}\n                  alt=\"seta\"\n                  width=\"100px\"\n                  style={{\n                    position: 'absolute',\n                    top: startRef.current.getBoundingClientRect().bottom + 200,\n                    left: startRef.current.getBoundingClientRect().left + 350,\n                  }}\n                  ref={newState.elements[2].ref}\n                  key=\"newNullElement-animation\"\n                />\n              </>\n            );\n            newState.arrows[0].render = (\n              <Xarrow\n                start={newState.elements[0].ref}\n                end={newState.elements[1].ref}\n                color=\"red\"\n                path=\"straight\"\n                startAnchor=\"right\"\n                endAnchor=\"left\"\n                key={uuidv4()}\n              />\n            );\n            newState.arrows[1].render = (\n              <Xarrow\n                start={newState.elements[1].ref}\n                end={newState.elements[2].ref}\n                color=\"red\"\n                path=\"grid\"\n                showHead={false}\n                strokeWidth={6}\n                startAnchor=\"right\"\n                endAnchor=\"top\"\n                key={uuidv4()}\n              />\n            );\n            return newState;\n          });\n          break;\n        case 'pointNewElementToStart':\n          setRenderNewWorkFlow((prevState) => {\n            const newState = { ...prevState };\n            newState.elements.pop();\n            newState.arrows[1].render =\n              elementList.length > 0 ? (\n                <Xarrow\n                  start={newState.elements[1].ref}\n                  end={elementList[0].elementRef}\n                  color=\"red\"\n                  path=\"straight\"\n                  startAnchor=\"top\"\n                  endAnchor=\"bottom\"\n                  key={uuidv4()}\n                />\n              ) : (\n                <Xarrow\n                  start={newState.elements[1].ref}\n                  end={nullSymbolRef}\n                  color=\"red\"\n                  path=\"grid\"\n                  showHead={false}\n                  strokeWidth={6}\n                  _cpy1Offset={-100}\n                  _cpy2Offset={-100}\n                  startAnchor=\"top\"\n                  endAnchor=\"top\"\n                  key={uuidv4()}\n                />\n              );\n            return newState;\n          });\n          break;\n        case 'pointStartToNewElement':\n          setLinkingNewElement(true);\n          setRenderNewWorkFlow((prevState) => {\n            const newState = { ...prevState };\n            let newArrow = {\n              render: (\n                <Xarrow\n                  start={startRef}\n                  end={newState.elements[1].ref}\n                  color=\"red\"\n                  path=\"straight\"\n                  startAnchor=\"right\"\n                  endAnchor=\"left\"\n                  key={uuidv4()}\n                />\n              ),\n            };\n            newState.arrows.push(newArrow);\n            return newState;\n          });\n          break;\n        // case 'auxToNextElement':\n        //   auxToNextElement();\n        case 'findValue':\n          return await find(value, true);\n        default:\n          break;\n      }\n      if (!hasWaited) {\n        await promisedTimeout(animation.timer || animationSpeed);\n      }\n    };\n\n    for (const animation of animationList) {\n      await getAnimation(animation);\n    }\n    // searchElement();\n  };\n\n  const searchElement = async (\n    indexOrValue,\n    isValue = false,\n    callBack = () => {}\n  ) => {\n    setIsSearching(true);\n\n    let index = 0;\n    let myInterval = setInterval(async () => {\n      if (elementList.length <= 0) {\n        clearInterval(myInterval);\n      } else {\n        if (\n          (isValue && indexOrValue === elementList[index]) ||\n          indexOrValue === index\n        ) {\n          clearInterval(myInterval);\n        } else {\n          await callBack();\n          index++;\n          setSearchingAnimation({\n            x: referenceList[index]\n              ? referenceList[index].elementRef.current.getBoundingClientRect()\n                  .right -\n                referenceList[\n                  index - 1\n                ].elementRef.current.getBoundingClientRect().right -\n                125\n              : nullSymbolRef.current.getBoundingClientRect().right -\n                referenceList[\n                  index - 1\n                ].elementRef.current.getBoundingClientRect().right -\n                85,\n          });\n        }\n      }\n    }, animationSpeed);\n  };\n\n  const insertElement = (indexToInsert, newElement) => {\n    setElementList((prevState) => {\n      const newList = [...prevState];\n      newList.splice(indexToInsert, 0, newElement);\n      return newList;\n    });\n    if (indexToInsert === 0) {\n      containerRef.current.scrollTo({\n        x: 0,\n        animated: true,\n      });\n    } else if (indexToInsert === elementList.length - 1) {\n      containerRef.current.scrollLeft = containerRef.current.scrollWidth;\n    }\n  };\n\n  const removeElement = (indexOrValue, isValue = false) => {\n    if (isValue) {\n      setElementList((prevState) =>\n        prevState.filter((element) => element !== indexOrValue)\n      );\n    } else {\n      setElementList((prevState) => {\n        const newList = [...prevState];\n        newList.splice(indexOrValue, 1);\n        return newList;\n      });\n    }\n  };\n\n  const handleExecution = async (action, actionType) => {\n    try {\n      const openModal = async () => {\n        setShowBuildMode(true);\n        await new Promise((resolve) => {\n          setModalPromise(() => resolve);\n        });\n      };\n\n      if (action === 'initializeList') {\n        if (buildMode) {\n          setFunctionType('initializeList');\n          await openModal();\n        }\n        setIsInitialized(true);\n      } else if (!isInitialized) {\n        throw new Error('A lista precisa ser inicializada!');\n      }\n\n      if (action === 'destroyList') {\n        if (buildMode) {\n          setFunctionType('destroyList');\n          await openModal();\n        }\n        setElementList([]);\n        setIsInitialized(false);\n        return;\n      }\n\n      if (action === 'search') {\n        switch (actionType) {\n          case 'byValue':\n            if (buildMode) {\n              setFunctionType('serchValue');\n              await openModal();\n            }\n            handleAnimation('findValue', value);\n            break;\n          case 'byIndex':\n            if (buildMode) {\n              setFunctionType('searchIndex');\n              await openModal();\n            }\n            console.log(index);\n            searchByIndex();\n            break;\n          default:\n            throw new Error('Ocorreu um erro ao buscar o elemento!');\n        }\n      }\n\n      if (action === 'insert') {\n        if (!value) {\n          throw new Error('O valor precisa ser informado!');\n        }\n        switch (actionType) {\n          case 'start':\n            if (buildMode) {\n              setFunctionType('insertStart');\n              await openModal();\n            }\n            let newElement = {\n              elementRef: createRef(),\n              value: value,\n              pointerFromRef: startRef,\n            };\n            updateCode(insereFun√ßaoSimples.code);\n            await handleAnimation(\n              insereFun√ßaoSimples.executionOrder,\n              newElement\n            );\n            if (elementList.length > 0) {\n              updateReferenceInElement(0, newElement.elementRef);\n            }\n            insertElement(0, newElement);\n            setRenderNewWorkFlow({ elements: [], arrows: [] });\n            // setShowNewElement(true);\n            break;\n          case 'end':\n            if (buildMode) {\n              setFunctionType('insertEnd');\n              await openModal();\n            }\n            setIndex(elementList.length == 0 ? 0 : elementList - 1);\n            setInsertButtonClicked(true);\n            searchByIndex(elementList.length == 0 ? 0 : elementList);\n            break;\n          case 'onIndex':\n            if (buildMode) {\n              setFunctionType('insertIndex');\n              await openModal();\n            }\n            if (index >= 0 && index <= elementList.length - 1) {\n              setInsertButtonClicked(true);\n              searchByIndex(index);\n            } else {\n              throw new Error('√çndice inv√°lido!');\n            }\n            break;\n          default:\n            throw new Error('Ocorreu um erro inesperado!');\n        }\n      } else if (action === 'remove') {\n        switch (actionType) {\n          case 'onIndex':\n            if (buildMode) {\n              setFunctionType('removeIndex');\n              await openModal();\n            }\n            if (index >= 0 && index <= elementList.length - 1) {\n              setRemoveButtonClicked(true);\n              searchByIndex(index);\n            } else {\n              throw new Error('√çndice inv√°lido!');\n            }\n            break;\n          case 'onValue':\n            if (!value) {\n              throw new Error('O valor precisa ser informado!');\n            }\n            if (buildMode) {\n              setFunctionType('removeValue');\n              await openModal();\n            }\n            if (elementList.length > 0) {\n              setRemoveButtonClicked(true);\n              searchByValue(value);\n            } else {\n              throw new Error('Valor inv√°lido!');\n            }\n            break;\n          default:\n            throw new Error('Ocorreu um erro inesperado!');\n        }\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const mountList = () => {\n      switch (listType) {\n        case 'simple':\n          return elementList.map((element, index) => {\n            return {\n              render: (\n                <motion.div\n                  layout\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    marginLeft: 40,\n                  }}\n                  key={`${element.value}${index}`}\n                  initial={{ opacity: 0 }}\n                  animate={{\n                    opacity: 1,\n                  }}\n                  exit={{\n                    scale: 0.2,\n                    opacity: 0,\n                  }}\n                  transition={{ type: 'spring' }}\n                >\n                  <Element\n                    isDetailed={showDetailedElements}\n                    content={element.value}\n                    ref={element.elementRef}\n                    key={uuidv4()}\n                  />\n                  {index > 0 && (\n                    <Xarrow\n                      start={element.pointerFromRef}\n                      end={element.elementRef}\n                      color=\"black\"\n                      path=\"straight\"\n                      startAnchor=\"right\"\n                      endAnchor=\"left\"\n                    />\n                  )}\n                  {index === elementList.length - 1 && (\n                    <Xarrow\n                      start={element.elementRef}\n                      end={nullSymbolRef}\n                      color=\"black\"\n                      path=\"grid\"\n                      showHead={false}\n                      strokeWidth={6}\n                      startAnchor=\"right\"\n                      endAnchor=\"top\"\n                    />\n                  )}\n                </motion.div>\n              ),\n              elementRef: element.elementRef,\n            };\n          });\n        default:\n          throw new Error('Invalid list type');\n      }\n    };\n    setRenderedList(mountList());\n  }, [elementList, listType, showDetailedElements]);\n\n  useEffect(() => {\n    updateXarrow();\n  }, [elementList]);\n\n  useEffect(() => {\n    setLinkingNewElement(false);\n  }, [renderedList]);\n\n  // const renderList = () => {\n  //   switch (listType) {\n  //     case 'simple':\n  //       return elementList.map((element, index) => {\n  //         referenceList[index] = {\n  //           elementRef: createRef(),\n  //         };\n  //         return (\n  //           <motion.div\n  //             layout\n  //             style={{ display: 'flex', alignItems: 'center', marginLeft: 40 }}\n  //             key={`${element}${index}`}\n  //             onClick={() => {\n  //               const newItens = [...elementList];\n  //               const removeItem = (arr, i) => {\n  //                 const index = arr.indexOf(i);\n  //                 if (index > -1) arr.splice(index, 1);\n  //               };\n  //               removeItem(newItens, element);\n  //               setElementList([...newItens]);\n  //             }}\n  //             animate={{\n  //               opacity: 1,\n  //             }}\n  //             exit={{\n  //               scale: 0.2,\n  //               opacity: 0,\n  //             }}\n  //             transition={{ type: 'spring' }}\n  //           >\n  //             <Element\n  //               isDetailed={showDetailedElements}\n  //               content={element}\n  //               ref={referenceList[index].elementRef}\n  //               key={uuidv4()}\n  //             />\n  //             <Xarrow\n  //               start={\n  //                 index > 0 ? referenceList[index - 1].elementRef : startRef\n  //               }\n  //               end={referenceList[index].elementRef}\n  //               color=\"black\"\n  //               path=\"straight\"\n  //               startAnchor=\"right\"\n  //               endAnchor=\"left\"\n  //             />\n  //             {index === elementList.length - 1 && (\n  //               <Xarrow\n  //                 start={referenceList[index].elementRef}\n  //                 end={nullSymbolRef}\n  //                 color=\"black\"\n  //                 path=\"grid\"\n  //                 showHead={false}\n  //                 animateDrawing={true}\n  //                 strokeWidth={6}\n  //                 startAnchor=\"right\"\n  //                 endAnchor=\"top\"\n  //               />\n  //             )}\n  //           </motion.div>\n  //         );\n  //       });\n  //     default:\n  //       throw new Error('Invalid list type');\n  //   }\n  // };\n\n  const windowRef = useRef();\n\n  return (\n    <div\n      className={`${className} ${styles.listPanel}`}\n      ref={windowRef}\n      style={{ overflowX: 'hidden' }}\n    >\n      {/* <div\n        className=\"animateElement\"\n        style={{\n          display: showNewElement ? 'block' : 'none',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: '100%',\n          width: '100%',\n          zIndex: 100,\n        }}\n      >\n        {element}\n      </div> */}\n      {showNewElement && (\n        <motion.div\n          key={Math.random() * 1000000}\n          {...newElementAnimation}\n          style={{\n            position: 'absolute',\n            top: startRef.current.getBoundingClientRect().bottom + 40,\n            left: startRef.current.getBoundingClientRect().left + 40,\n            width: 100,\n            height: 100,\n          }}\n        >\n          {element}\n        </motion.div>\n      )}\n      <div className={styles.listView}>\n        <h1>Simulador de Listas Encadeadas</h1>\n        {/* <AnimatePresence mode=\"popLayout\">\n          {itens.map((item) => (\n            <motion.div\n              layout\n              onClick={() => {\n                const newItens = [...itens];\n                const removeItem = (arr, i) => {\n                  const index = arr.indexOf(i);\n                  if (index > -1) arr.splice(index, 1);\n                };\n                removeItem(newItens, item);\n                setItens([...newItens]);\n              }}\n              key={item}\n              style={{\n                width: 80,\n                height: 80,\n                margin: 10,\n                backgroundColor: 'blue',\n              }}\n              initial={{ x: 0, y: 0, rotate: 0, opacity: 0 }}\n              animate={{\n                x: 100,\n                y: 100,\n                rotate: 180,\n                display: 'inline-block',\n                opacity: 1,\n              }}\n              exit={{\n                scale: 0.2,\n                opacity: 0,\n              }}\n              transition={{ type: 'spring' }}\n            >\n              teste\n            </motion.div>\n          ))}\n        </AnimatePresence> */}\n        <Xwrapper>\n          <div className={styles.listContainer} onScroll={updateXarrow}>\n            <div\n              style={{\n                display: isInitialized ? 'flex' : 'none',\n                minHeight: 250,\n                alignItems: 'center',\n                overflowX: 'auto', // Add CSS to make the container scrollable horizontally\n                whiteSpace: 'nowrap', // Prevent line breaks for the child elements\n                overflowX: 'auto', // Hide the vertical scrollbar\n                overflowY: 'hidden', // Hide the horizontal scrollbar\n                paddingTop: 100,\n              }}\n              ref={containerRef}\n            >\n              <div\n                style={{ display: isInitialized ? 'flex' : 'none' }}\n                className={styles.listStart}\n                ref={startRef}\n              >\n                *Lista\n              </div>\n              {/* {renderedList.map((element, index) => (\n                <div key={index}>\n                  <motion.div\n                    key={currentItemIndex}\n                    initial={{ opacity: currentItemIndex === index ? 1 : 0 }}\n                  >\n                    <div style={auxPointerStyle}>Aux</div>\n                    <img\n                      src={SetaVermelha}\n                      alt=\"seta\"\n                      height=\"35px\"\n                      style={auxPointerStyle}\n                    />\n                  </motion.div>\n                  {element.render}\n                </div>\n              ))} */}\n              <AnimatePresence mode=\"popLayout\">\n                {renderedList.map((element, index) => (\n                  <div\n                    style={{ position: 'relative' }}\n                    key={`ElementAndArrows${index}`}\n                  >\n                    {element.render}\n                    {currentAuxIndex === index && (\n                      <motion.div\n                        style={{\n                          position: 'absolute',\n                          top: -90,\n                          left: 62,\n                          zIndex: 100,\n                        }}\n                        initial={{ y: 0 }}\n                        animate={{ y: 10 }}\n                        transition={{\n                          type: 'tween',\n                          duration: 0.8,\n                          repeat: Infinity,\n                          repeatType: 'reverse',\n                        }}\n                        key={'aux' + currentItemIndex}\n                      >\n                        <h6 style={{ color: 'red' }}>Aux</h6>\n                        <img\n                          src={SetaVermelha}\n                          alt=\"ponteiro auxiliar\"\n                          width={50}\n                        />\n                      </motion.div>\n                    )}\n                    {currentAntIndex === index && (\n                      <motion.div\n                        style={{\n                          position: 'absolute',\n                          top: -90,\n                          left: 62,\n                          zIndex: 100,\n                        }}\n                        initial={{ y: 0 }}\n                        animate={{ y: 10 }}\n                        transition={{\n                          type: 'tween',\n                          duration: 0.8,\n                          repeat: Infinity,\n                          repeatType: 'reverse',\n                        }}\n                        key={'ant' + currentItemIndex}\n                      >\n                        <h6 style={{ color: 'blue' }}>Ant</h6>\n                        <img\n                          src={SetaAzul}\n                          alt=\"ponteiro para anterior\"\n                          width={50}\n                        />\n                      </motion.div>\n                    )}\n                  </div>\n                ))}\n              </AnimatePresence>\n              <div\n                style={{\n                  position: 'relative',\n                  height: 100,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                {currentAuxIndex === 'nullElement' && (\n                  <motion.div\n                    style={{\n                      position: 'absolute',\n                      top: -90,\n                      left: 55,\n                      zIndex: 100,\n                    }}\n                    initial={{ y: 0 }}\n                    animate={{ y: 10 }}\n                    transition={{\n                      type: 'tween',\n                      duration: 0.8,\n                      repeat: Infinity,\n                      repeatType: 'reverse',\n                    }}\n                    key={'aux-nullElement'}\n                  >\n                    <h6 style={{ color: 'red' }}>Aux</h6>\n                    <img\n                      src={SetaVermelha}\n                      alt=\"ponteiro auxiliar\"\n                      width={50}\n                    />\n                  </motion.div>\n                )}\n                <img\n                  src={NullSymbol}\n                  alt=\"seta\"\n                  width=\"100px\"\n                  style={{ marginLeft: 30, alignSelf: 'end' }}\n                  hidden={!isInitialized}\n                  ref={nullSymbolRef}\n                />\n              </div>\n            </div>\n          </div>\n          {renderNewWorkFlow.elements.map((element, index) => element.render)}\n          {renderNewWorkFlow.arrows.map((element, index) => element.render)}\n          {isInitialized && elementList.length === 0 && !linkingNewElement && (\n            <Xarrow\n              start={startRef}\n              end={nullSymbolRef}\n              color=\"black\"\n              path=\"grid\"\n              showHead={false}\n              strokeWidth={6}\n              startAnchor=\"right\"\n              endAnchor=\"top\"\n            />\n          )}\n          {isInitialized && elementList.length > 0 && !linkingNewElement && (\n            <Xarrow\n              start={startRef}\n              end={elementList[0].elementRef}\n              color=\"black\"\n              path=\"straight\"\n              startAnchor=\"right\"\n              endAnchor=\"left\"\n            />\n          )}\n        </Xwrapper>\n        {/* {optionalRender}\n\n        {isSearching && (\n          <motion.img\n            src={SetaVermelha}\n            style={{\n              position: 'absolute',\n              left: 685,\n              top: 79,\n            }}\n            width={50}\n            height={50}\n            initial={{}}\n            animate={searchingAnimation}\n          />\n        )} */}\n\n        {/* {insertButtonClicked && (\n          <motion.div\n            animate={{ opacity: 1 }}\n            initial={{ opacity: 0, x: 80 }}\n            transition={{ duration: 1 }}\n          >\n            <Element content={value} delayed={true} />\n          </motion.div>\n        )} */}\n      </div>\n      <div\n        style={{\n          display: showNaturalLanguageExplanation ? 'block' : 'none',\n          height: '50px',\n          width: '100%',\n          padding: '10px',\n          boxSizing: 'border-box',\n          backgroundColor: 'yellow',\n        }}\n      >\n        <p>{NaturalLanguageExplanation}</p>\n      </div>\n      <div className={`${styles.controlPanel} text-dark`}>\n        <div className=\"row h-100 align-items-center justify-content-center\">\n          <div className={`col-12 col-md-3`}>\n            <div className=\"row justify-content-center align-content-center\">\n              <div className=\"col-2\">\n                <input\n                  style={{ width: 20 }}\n                  type=\"checkbox\"\n                  name=\"detailedElements\"\n                  id=\"detailedElements\"\n                  value={showDetailedElements}\n                  onChange={() =>\n                    setShowDetailedElements(!showDetailedElements)\n                  }\n                />\n              </div>\n              <div className=\"col-10 justify-content-start\">\n                <p\n                  style={{\n                    textAlign: 'start',\n                  }}\n                >\n                  Exibir itens detalhados\n                </p>\n              </div>\n            </div>\n            <div className=\"row justify-content-center align-content-center\">\n              <div className=\"col-2\">\n                <input\n                  style={{ width: 20 }}\n                  type=\"checkbox\"\n                  name=\"buildMode\"\n                  id=\"buildMode\"\n                  checked={buildMode}\n                  onChange={() => setBuildMode(!buildMode)}\n                />\n              </div>\n              <div className=\"col-10 justify-content-start\">\n                <p\n                  style={{\n                    textAlign: 'start',\n                  }}\n                >\n                  Modo completar lacuna\n                </p>\n              </div>\n            </div>\n            <div className=\"row justify-content-center align-content-center\">\n              <div className=\"col-2\">\n                <input\n                  style={{ width: 20 }}\n                  type=\"checkbox\"\n                  name=\"naturalLanguage\"\n                  id=\"naturalLanguage\"\n                  value={showNaturalLanguageExplanation}\n                  onChange={() =>\n                    setShowNaturalLanguageExplanation(\n                      !showNaturalLanguageExplanation\n                    )\n                  }\n                />\n              </div>\n              <div className=\"col-10 justify-content-start\">\n                <p\n                  style={{\n                    textAlign: 'start',\n                  }}\n                >\n                  Exibir explica√ß√£o em linguagem natural\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className={`col-12 col-md-6`}>\n            <div className=\"row mb-3 justify-content-center align-content-center\">\n              <div className=\"col-4\">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => handleExecution('initializeList')}\n                >\n                  {' '}\n                  Iniciar lista\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => {\n                    handleExecution('destroyList');\n                  }}\n                >\n                  {' '}\n                  Destruir lista\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => handleExecution('search', 'byIndex')}\n                >\n                  {' '}\n                  Buscar por √≠ndice\n                </button>\n              </div>\n            </div>\n            <div className=\"row mb-3 justify-content-center align-content-center\">\n              <div className=\"col-4\">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => handleExecution('insert', 'start')}\n                >\n                  {' '}\n                  Inserir no in√≠cio\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => handleExecution('insert', 'end')}\n                >\n                  {' '}\n                  Inserir no fim\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => handleExecution('insert', 'onIndex')}\n                >\n                  {' '}\n                  Inserir no √≠ndice\n                </button>\n              </div>\n            </div>\n            <div className=\"row justify-content-center\">\n              <div className=\"col-4\">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => handleExecution('remove', 'onValue')}\n                >\n                  {' '}\n                  Remover por valor\n                </button>\n              </div>\n              <div className=\"col-4 \">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => handleExecution('remove', 'onIndex')}\n                >\n                  {' '}\n                  Remover por √≠ndice\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button\n                  className={`${styles.actionButton}`}\n                  onClick={() => handleExecution('search', 'byValue')}\n                >\n                  {' '}\n                  Buscar Elemento\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className={`col-3`}>\n            <div className=\"row mb-3 justify-content-end\">\n              <div className=\"col-12 col-md-3 text-start\">\n                <label htmlFor=\"\">Valor: </label>\n              </div>\n              <div className=\"col-12 col-md-8\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Insira o valor\"\n                  onChange={(e) => setValue(e.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"row justify-content-end\">\n              <div className=\"col-12 col-md-3 text-start\">\n                <label htmlFor=\"\">√çndice: </label>\n              </div>\n              <div className=\"col-12 col-md-8\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Insira o √≠ndice\"\n                  onChange={(e) => setIndex(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {showBuildMode && (\n        <CodeBuilderModal\n          isOpen={showBuildMode}\n          onClose={() => {\n            setShowBuildMode(false);\n          }}\n          functionType={functionType}\n          onExecute={() => {\n            modalPromise();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ListPanel;\n","import ListPanel from \"./ListPanel\";\n\nexport default ListPanel;\n","import \"./App.css\";\nimport React from \"react\";\nimport CodePanel from \"./components/CodePanel\";\nimport ListPanel from \"./components/ListPanel\";\n\nfunction App() {\n  const [code, setCode] = React.useState(\"\");\n  const [line, setLine] = React.useState(0);\n  return (\n    <div className=\"App\">\n      <CodePanel code={code} line={line} />\n      <ListPanel updateCode={setCode} updateLine={setLine} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3sVd0\",\"isOpen\":\"Modal_isOpen__1B93l\",\"contentContainer\":\"Modal_contentContainer__KsySW\",\"header\":\"Modal_header__3ymq2\",\"title\":\"Modal_title__51Fro\",\"closeBtn\":\"Modal_closeBtn__1oFrA\",\"content\":\"Modal_content__YJ8ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"ControlPanel_controlPanel__2Jklr\",\"controlActionContainer\":\"ControlPanel_controlActionContainer__2bp-9\",\"actionCard\":\"ControlPanel_actionCard__1JScw\",\"header\":\"ControlPanel_header__1rIOh\",\"body\":\"ControlPanel_body__39RD9\",\"debounce\":\"ControlPanel_debounce__19sru\"};"],"sourceRoot":""}
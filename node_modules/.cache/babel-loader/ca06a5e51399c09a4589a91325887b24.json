{"ast":null,"code":"import _slicedToArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/CodeWithGaps/CodeWithGaps.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './CodeWithGaps.module.css';\nvar CodeWithGaps = function CodeWithGaps(_ref) {\n  var code = _ref.code,\n    gaps = _ref.gaps,\n    finalCode = _ref.finalCode;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    draggedGap = _useState2[0],\n    setDraggedGap = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    codeWithGaps = _useState4[0],\n    setCodeWithGaps = _useState4[1];\n  var gapRefs = useRef([]);\n  var replaceStrings = function replaceStrings(code, gaps) {\n    var result = code;\n    var counter = 0;\n    finalCode.current = [];\n    gaps.forEach(function (gap) {\n      while (result.includes(gap)) {\n        var gapPlaceholder = \"{{\".concat(counter, \"}}\");\n        finalCode.current[counter] = {\n          currentCode: '',\n          correctCode: gap\n        };\n        counter++;\n        result = result.replace(gap, gapPlaceholder);\n      }\n    });\n    return result;\n  };\n  useEffect(function () {\n    setCodeWithGaps(replaceStrings(code, gaps));\n  }, []);\n  var handleDragStart = function handleDragStart(event, gap) {\n    event.dataTransfer.setData('text/plain', gap);\n    setDraggedGap(gap);\n  };\n  var handleDragOver = function handleDragOver(event) {\n    event.preventDefault();\n  };\n  var handleDrop = function handleDrop(event, gapIndex) {\n    event.preventDefault();\n    var gapElement = gapRefs.current[gapIndex];\n    var selectionStart = gapElement.selectionStart;\n    var selectionEnd = gapElement.selectionEnd;\n    var currentValue = gapElement.value;\n    var beforeSelection = currentValue.substring(0, selectionStart);\n    var afterSelection = currentValue.substring(selectionEnd);\n    var newValue = beforeSelection + draggedGap + afterSelection;\n    gapElement.value = newValue;\n    gapElement.setSelectionRange(selectionStart, selectionStart + draggedGap.length);\n    finalCode.current[gapIndex].currentCode = newValue;\n    gapElement.dispatchEvent(new Event('input', {\n      bubbles: true\n    }));\n    setDraggedGap('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(styles.codeWithGapsContainer, \" container h-100\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    className: \"col-8 col-md-10 \".concat(styles.codeContainer, \" h-100\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, codeWithGaps.split('{{').map(function (line, index) {\n    if (line.includes('}}')) {\n      var _line$split = line.split('}}'),\n        _line$split2 = _slicedToArray(_line$split, 2),\n        gapIndex = _line$split2[0],\n        remaining = _line$split2[1];\n      var gap = gaps[parseInt(gapIndex)];\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: function ref(el) {\n          return gapRefs.current[parseInt(gapIndex)] = el;\n        },\n        type: \"text\",\n        draggable: \"false\",\n        readOnly: true,\n        defaultValue: \"\",\n        onDragOver: handleDragOver // Add onDragOver event handler\n        ,\n        onDrop: function onDrop(e) {\n          return handleDrop(e, parseInt(gapIndex));\n        } // Add onDrop event handler\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }), remaining);\n    }\n    return line;\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 col-md-2 \".concat(styles.elementsContainer, \" h-100\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, gaps.map(function (gap, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      draggable: \"true\",\n      onDragStart: function onDragStart(e) {\n        return handleDragStart(e, gap);\n      },\n      onDragOver: handleDragOver,\n      onDrop: function onDrop(e) {\n        return handleDrop(e, index);\n      },\n      className: \"\".concat(styles.fillBlankElement),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, gap);\n  }))));\n};\nexport default CodeWithGaps;","map":{"version":3,"names":["React","useEffect","useRef","useState","styles","CodeWithGaps","code","gaps","finalCode","draggedGap","setDraggedGap","codeWithGaps","setCodeWithGaps","gapRefs","replaceStrings","result","counter","current","forEach","gap","includes","gapPlaceholder","currentCode","correctCode","replace","handleDragStart","event","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","gapIndex","gapElement","selectionStart","selectionEnd","currentValue","value","beforeSelection","substring","afterSelection","newValue","setSelectionRange","length","dispatchEvent","Event","bubbles","codeWithGapsContainer","codeContainer","split","map","line","index","remaining","parseInt","el","e","elementsContainer","fillBlankElement"],"sources":["/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/CodeWithGaps/CodeWithGaps.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styles from './CodeWithGaps.module.css';\n\nconst CodeWithGaps = ({ code, gaps, finalCode }) => {\n  const [draggedGap, setDraggedGap] = useState('');\n  const [codeWithGaps, setCodeWithGaps] = useState('');\n  const gapRefs = useRef([]);\n\n  const replaceStrings = (code, gaps) => {\n    let result = code;\n    let counter = 0;\n    finalCode.current = [];\n    gaps.forEach((gap) => {\n      while (result.includes(gap)) {\n        const gapPlaceholder = `{{${counter}}}`;\n        finalCode.current[counter] = {\n          currentCode: '',\n          correctCode: gap,\n        };\n        counter++;\n        result = result.replace(gap, gapPlaceholder);\n      }\n    });\n    return result;\n  };\n\n  useEffect(() => {\n    setCodeWithGaps(replaceStrings(code, gaps));\n  }, []);\n\n  const handleDragStart = (event, gap) => {\n    event.dataTransfer.setData('text/plain', gap);\n    setDraggedGap(gap);\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const handleDrop = (event, gapIndex) => {\n    event.preventDefault();\n    const gapElement = gapRefs.current[gapIndex];\n    const selectionStart = gapElement.selectionStart;\n    const selectionEnd = gapElement.selectionEnd;\n\n    const currentValue = gapElement.value;\n    const beforeSelection = currentValue.substring(0, selectionStart);\n    const afterSelection = currentValue.substring(selectionEnd);\n\n    const newValue = beforeSelection + draggedGap + afterSelection;\n    gapElement.value = newValue;\n    gapElement.setSelectionRange(\n      selectionStart,\n      selectionStart + draggedGap.length\n    );\n\n    finalCode.current[gapIndex].currentCode = newValue;\n    gapElement.dispatchEvent(new Event('input', { bubbles: true }));\n    setDraggedGap('');\n  };\n\n  return (\n    <div className={`${styles.codeWithGapsContainer} container h-100`}>\n      <div className=\"row h-100\">\n        <pre className={`col-8 col-md-10 ${styles.codeContainer} h-100`}>\n          <code>\n            {/* ...existing code... */}\n            {codeWithGaps.split('{{').map((line, index) => {\n              if (line.includes('}}')) {\n                const [gapIndex, remaining] = line.split('}}');\n                const gap = gaps[parseInt(gapIndex)];\n                return (\n                  <React.Fragment key={index}>\n                    <input\n                      ref={(el) => (gapRefs.current[parseInt(gapIndex)] = el)}\n                      type=\"text\"\n                      draggable=\"false\"\n                      readOnly\n                      defaultValue=\"\"\n                      onDragOver={handleDragOver} // Add onDragOver event handler\n                      onDrop={(e) => handleDrop(e, parseInt(gapIndex))} // Add onDrop event handler\n                    />\n                    {remaining}\n                  </React.Fragment>\n                );\n              }\n              return line;\n            })}\n          </code>\n        </pre>\n        <div className={`col-4 col-md-2 ${styles.elementsContainer} h-100`}>\n          {gaps.map((gap, index) => (\n            <div\n              key={index}\n              draggable=\"true\"\n              onDragStart={(e) => handleDragStart(e, gap)}\n              onDragOver={handleDragOver}\n              onDrop={(e) => handleDrop(e, index)}\n              className={`${styles.fillBlankElement}`}\n            >\n              {gap}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodeWithGaps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
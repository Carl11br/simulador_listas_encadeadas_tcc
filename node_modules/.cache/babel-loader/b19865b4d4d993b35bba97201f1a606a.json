{"ast":null,"code":"import _toConsumableArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/ListPanel/ListPanel.jsx\";\nimport React, { useState, useRef, useEffect, createRef } from \"react\";\nimport styles from \"./ListPanel.module.css\";\nimport Element from \"../ListElement\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Seta from \"../../Seta.svg\";\nimport SetaVermelha from \"../../SetaVermelha.svg\";\nimport ControlPanel from \"../ControlPanel\";\nimport NullSymbol from \"../../NullSymbol.svg\";\nimport Xarrow, { Xwrapper, useXarrow } from \"react-xarrows\";\nvar ListPanel = function ListPanel(_ref) {\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? \"\" : _ref$className,\n    _ref$listType = _ref.listType,\n    listType = _ref$listType === void 0 ? \"simple\" : _ref$listType;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    elementList = _useState2[0],\n    setElementList = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    renderedList = _useState4[0],\n    setRenderedList = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isInitialized = _useState6[0],\n    setIsInitialized = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    value = _useState8[0],\n    setValue = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    index = _useState10[0],\n    setIndex = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    element = _useState12[0],\n    setElement = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    valueToBeSearched = _useState14[0],\n    setValueToBeSearched = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    indexToBeSearched = _useState16[0],\n    setIndexToBeSearched = _useState16[1];\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    valueFound = _React$useState2[0],\n    setValueFound = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    animationStopped = _React$useState4[0],\n    setAnimationStopped = _React$useState4[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showNewElement = _useState18[0],\n    setShowNewElement = _useState18[1];\n  var _React$useState5 = React.useState(-1),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    currentItemIndex = _React$useState6[0],\n    setCurrentItemIndex = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    isSearchByIndex = _React$useState8[0],\n    setIsSearchByIndex = _React$useState8[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    insertButtonClicked = _useState20[0],\n    setInsertButtonClicked = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    removeButtonClicked = _useState22[0],\n    setRemoveButtonClicked = _useState22[1];\n  var containerRef = useRef(null);\n  var elementRef = useRef(null);\n  useEffect(function () {\n    var container = containerRef.current;\n    var element = elementRef.current;\n    if (!container || !element) {\n      return;\n    }\n    var containerWidth = container.clientWidth;\n    var elementWidth = element.clientWidth;\n    if (elementWidth > containerWidth) {\n      var scrollAmount = elementWidth - containerWidth;\n      container.scrollTo({\n        left: scrollAmount,\n        behavior: 'smooth'\n      });\n    }\n  }, []);\n  React.useEffect(function () {\n    var intervalId;\n    var intervalDuration = 2000;\n    if (!valueFound && !animationStopped) {\n      intervalId = setInterval(function () {\n        setCurrentItemIndex(function (prevIndex) {\n          if (elementList.length > 0) {\n            var _index = prevIndex + 1;\n            if (_index >= elementList.length) {\n              console.log(\"O valor nÃ£o foi encontrado\");\n              setCurrentItemIndex(-1);\n              setAnimationStopped(true);\n            }\n            if (isSearchByIndex && _index == indexToBeSearched || elementList[_index] == valueToBeSearched) {\n              if (insertButtonClicked) {\n                insertElement(_index, value);\n                setInsertButtonClicked(false);\n              }\n              if (removeButtonClicked) {\n                removeElement(_index);\n                setRemoveButtonClicked(false);\n              }\n              console.log(\"O valor foi encontrado\");\n              setValueFound(true);\n              setTimeout(function () {\n                setCurrentItemIndex(-1);\n              }, 2000);\n            }\n            return _index;\n          } else {\n            if (insertButtonClicked) {\n              insertElement(index, value);\n              setInsertButtonClicked(false);\n            }\n            return 0;\n          }\n        });\n      }, intervalDuration);\n    }\n    return function () {\n      clearInterval(intervalId);\n      clearTimeout();\n    };\n  }, [elementList.length, valueToBeSearched, valueFound, animationStopped]);\n  var searchByValue = function searchByValue() {\n    setIsSearchByIndex(false);\n    setValueToBeSearched(value);\n    setValueFound(false);\n    setCurrentItemIndex(-1);\n    setAnimationStopped(false);\n  };\n  var searchByIndex = function searchByIndex(indexNum) {\n    setIsSearchByIndex(true);\n    indexNum ? setIndexToBeSearched(indexNum) : setIndexToBeSearched(index);\n    setValueFound(false);\n    setCurrentItemIndex(-1);\n    setAnimationStopped(false);\n  };\n  var auxPointerStyle = {\n    position: 'relative',\n    left: '10px',\n    textAlign: 'center'\n  };\n  var style = {\n    initialPosition: function initialPosition(inRelationToElementRef) {\n      console.log(inRelationToElementRef);\n      return {\n        display: \"block\",\n        position: \"absolute\",\n        top: \"\".concat(inRelationToElementRef.current ? inRelationToElementRef.current.getBoundingClientRect().top + inRelationToElementRef.current.getBoundingClientRect().height + 30 : 0, \"px\"),\n        left: \"\".concat(inRelationToElementRef.current ? inRelationToElementRef.current.getBoundingClientRect().left : 0, \"px\")\n      };\n    },\n    move: {}\n  };\n  var insertElement = function insertElement(indexToInsert, newValue) {\n    setElementList(function (prevState) {\n      var newList = _toConsumableArray(prevState);\n      if (indexToInsert === elementList.length - 1 && indexToInsert !== 0) {\n        newList.push(newValue);\n      } else {\n        newList.splice(indexToInsert, 0, newValue);\n      }\n      return newList;\n    });\n    if (indexToInsert === 0) {\n      containerRef.current.scrollTo({\n        x: 0,\n        animated: true\n      });\n    } else if (indexToInsert === elementList.length - 1) {\n      containerRef.current.scrollLeft = containerRef.current.scrollWidth;\n    }\n  };\n  var removeElement = function removeElement(indexOrValue) {\n    var isValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (isValue) {\n      console.log(\"aqui\");\n      setElementList(function (prevState) {\n        return prevState.filter(function (element) {\n          return element !== indexOrValue;\n        });\n      });\n    } else {\n      setElementList(function (prevState) {\n        var newList = _toConsumableArray(prevState);\n        newList.splice(indexOrValue, 1);\n        return newList;\n      });\n    }\n  };\n  var handleExecution = function handleExecution(action, actionType) {\n    if (!isInitialized) {\n      throw new Error(\"List not initialized\");\n    }\n    if (action === \"insert\") {\n      switch (actionType) {\n        case \"start\":\n          setIndex(0);\n          setInsertButtonClicked(true);\n          searchByIndex(0);\n          break;\n        case \"end\":\n          setIndex(elementList.length - 1);\n          setInsertButtonClicked(true);\n          searchByIndex(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            setInsertButtonClicked(true);\n            searchByIndex(index);\n          } else {\n            throw new Error(\"Invalid action index\");\n          }\n          break;\n        case \"onValue\":\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    } else if (action === \"remove\") {\n      switch (actionType) {\n        case \"start\":\n          setIndex(0);\n          setRemoveButtonClicked(true);\n          searchByIndex(0);\n          break;\n        case \"end\":\n          removeElement(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            removeElement(index);\n          } else {\n            throw new Error(\"Invalid index\");\n          }\n          break;\n        case \"onValue\":\n          if (elementList.length > 0) {\n            removeElement(value, true);\n          } else {\n            throw new Error(\"Invalid Value\");\n          }\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    }\n  };\n  useEffect(function () {\n    var mountList = function mountList() {\n      switch (listType) {\n        case \"simple\":\n          return elementList.map(function (element) {\n            var newRef = createRef();\n            return {\n              render: /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: Seta,\n                alt: \"seta\",\n                width: \"35px\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }\n              }), /*#__PURE__*/React.createElement(Element, {\n                content: element,\n                ref: newRef,\n                key: uuidv4(),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }\n              })),\n              ref: newRef\n            };\n          });\n        default:\n          throw new Error(\"Invalid list type\");\n      }\n    };\n    setRenderedList(mountList());\n  }, [elementList, listType]);\n  var windowRef = useRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(className, \" \").concat(styles.listPanel),\n    ref: windowRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animateElement\",\n    style: {\n      display: showNewElement ? \"block\" : \"none\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      height: \"100%\",\n      width: \"100%\",\n      zIndex: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, element), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, \"Simulador de Listas Encadeadas\"), /*#__PURE__*/React.createElement(Xwrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isInitialized ? \"flex\" : \"none\",\n      overflowX: \"auto\",\n      // Add CSS to make the container scrollable horizontally\n      whiteSpace: \"nowrap\" // Prevent line breaks for the child elements\n    },\n\n    ref: containerRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isInitialized ? \"flex\" : \"none\"\n    },\n    className: styles.listStart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, \"In\\xEDcio\"), renderedList.map(function (element, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, currentItemIndex === index && /*#__PURE__*/React.createElement(\"div\", {\n      style: auxPointerStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, \"Aux\"), currentItemIndex === index && /*#__PURE__*/React.createElement(\"img\", {\n      src: SetaVermelha,\n      alt: \"seta\",\n      height: \"35px\",\n      style: auxPointerStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }), element.render);\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: NullSymbol,\n    alt: \"seta\",\n    width: \"100px\",\n    style: {\n      marginTop: 70\n    },\n    hidden: !isInitialized,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controlPanel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Insira o valor\",\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Insira o \\xEDndice\",\n    onChange: function onChange(e) {\n      return setIndex(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setIsInitialized(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  }, \" Iniciar lista\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, \" destruir lista\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"start\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no in\\xEDcio\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"end\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no fim\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"onIndex\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no \\xEDndice\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"remove\", \"onValue\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, \" \", \"Remover por valor\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"remove\", \"onIndex\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, \" \", \"Remover por \\xEDndice\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return searchByValue();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, \" Buscar Elemento\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return searchByIndex();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, \" Buscar por Indice\")));\n};\nexport default ListPanel;","map":{"version":3,"names":["React","useState","useRef","useEffect","createRef","styles","Element","v4","uuidv4","ControlPanel","Xarrow","Xwrapper","useXarrow","ListPanel","className","listType","elementList","setElementList","renderedList","setRenderedList","isInitialized","setIsInitialized","value","setValue","index","setIndex","element","setElement","valueToBeSearched","setValueToBeSearched","indexToBeSearched","setIndexToBeSearched","valueFound","setValueFound","animationStopped","setAnimationStopped","showNewElement","setShowNewElement","currentItemIndex","setCurrentItemIndex","isSearchByIndex","setIsSearchByIndex","insertButtonClicked","setInsertButtonClicked","removeButtonClicked","setRemoveButtonClicked","containerRef","elementRef","container","current","containerWidth","clientWidth","elementWidth","scrollAmount","scrollTo","left","behavior","intervalId","intervalDuration","setInterval","prevIndex","length","console","log","insertElement","removeElement","setTimeout","clearInterval","clearTimeout","searchByValue","searchByIndex","indexNum","auxPointerStyle","position","textAlign","style","initialPosition","inRelationToElementRef","display","top","getBoundingClientRect","height","move","indexToInsert","newValue","prevState","newList","push","splice","x","animated","scrollLeft","scrollWidth","indexOrValue","isValue","filter","handleExecution","action","actionType","Error","mountList","map","newRef","render","alignItems","Seta","ref","windowRef","listPanel","width","zIndex","listView","listContainer","overflowX","whiteSpace","listStart","SetaVermelha","NullSymbol","marginTop","controlPanel","e","target"],"sources":["/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/ListPanel/ListPanel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, createRef } from \"react\";\nimport styles from \"./ListPanel.module.css\";\nimport Element from \"../ListElement\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Seta from \"../../Seta.svg\";\nimport SetaVermelha from \"../../SetaVermelha.svg\";\nimport ControlPanel from \"../ControlPanel\";\nimport NullSymbol from \"../../NullSymbol.svg\";\nimport Xarrow, { Xwrapper, useXarrow } from \"react-xarrows\";\n\nconst ListPanel = ({ className = \"\", listType = \"simple\" }) => {\n  const [elementList, setElementList] = useState([]);\n  const [renderedList, setRenderedList] = useState([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [index, setIndex] = useState(\"\");\n  const [element, setElement] = useState();\n  const [valueToBeSearched, setValueToBeSearched] = useState(\"\");\n  const [indexToBeSearched, setIndexToBeSearched] = useState(\"\");\n  const [valueFound, setValueFound] = React.useState(true);\n  const [animationStopped, setAnimationStopped] = React.useState(false);\n  const [showNewElement, setShowNewElement] = useState(false);\n  const [currentItemIndex, setCurrentItemIndex] = React.useState(-1);\n  const [isSearchByIndex, setIsSearchByIndex] = React.useState(false);\n  const [insertButtonClicked, setInsertButtonClicked] = useState(false);\n  const [removeButtonClicked, setRemoveButtonClicked] = useState(false);\n\n  const containerRef = useRef(null);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    const element = elementRef.current;\n\n    if (!container || !element) {\n      return;\n    }\n\n    const containerWidth = container.clientWidth;\n    const elementWidth = element.clientWidth;\n\n    if (elementWidth > containerWidth) {\n      const scrollAmount = elementWidth - containerWidth;\n      container.scrollTo({ left: scrollAmount, behavior: 'smooth' });\n    }\n  }, []);\n\n  React.useEffect(() => {\n    let intervalId;\n    const intervalDuration = 2000;\n\n    if (!valueFound && !animationStopped) {\n      intervalId = setInterval(() => {\n        setCurrentItemIndex((prevIndex) => {\n          if (elementList.length > 0) {\n            const index = (prevIndex + 1);\n            if (index >= elementList.length) {\n              console.log(\"O valor nÃ£o foi encontrado\");\n              setCurrentItemIndex(-1); \n              setAnimationStopped(true); \n            }\n            if ((isSearchByIndex && (index == indexToBeSearched)) || (elementList[index] == valueToBeSearched)) {\n              if (insertButtonClicked) {\n                insertElement(index, value);\n                setInsertButtonClicked(false);\n              }\n              if (removeButtonClicked) {\n                removeElement(index);\n                setRemoveButtonClicked(false);\n              }\n              console.log(\"O valor foi encontrado\");\n              setValueFound(true);\n\n              setTimeout(() => {\n                setCurrentItemIndex(-1);\n              }, 2000);\n            }\n\n            return index;\n          } else {\n            if (insertButtonClicked) {\n              insertElement(index, value);\n              setInsertButtonClicked(false);\n            }\n            return 0;\n          }\n        });\n      }, intervalDuration);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n      clearTimeout(); \n    };\n  }, [elementList.length, valueToBeSearched, valueFound, animationStopped]);\n\n\n  const searchByValue = () => {\n    setIsSearchByIndex(false);\n    setValueToBeSearched(value)\n    setValueFound(false);\n    setCurrentItemIndex(-1)\n    setAnimationStopped(false);\n  }\n  const searchByIndex = (indexNum) => {\n    setIsSearchByIndex(true);\n    indexNum ? setIndexToBeSearched(indexNum) : setIndexToBeSearched(index);\n    setValueFound(false);\n    setCurrentItemIndex(-1)\n    setAnimationStopped(false);\n  }\n\n  const auxPointerStyle = {\n    position: 'relative',\n    left: '10px',\n    textAlign: 'center',\n  };\n\n  const style = {\n    initialPosition: (inRelationToElementRef) => {\n      console.log(inRelationToElementRef);\n      return {\n        display: \"block\",\n        position: \"absolute\",\n        top: `${inRelationToElementRef.current\n          ? inRelationToElementRef.current.getBoundingClientRect().top +\n          inRelationToElementRef.current.getBoundingClientRect().height +\n          30\n          : 0\n          }px`,\n        left: `${inRelationToElementRef.current\n          ? inRelationToElementRef.current.getBoundingClientRect().left\n          : 0\n          }px`,\n      };\n    },\n    move: {},\n  };\n\n  const insertElement = (indexToInsert, newValue) => {\n    setElementList((prevState) => {\n      const newList = [...prevState];\n      if (indexToInsert === elementList.length - 1 && indexToInsert !== 0) {\n        newList.push(newValue);\n      } else {\n        newList.splice(indexToInsert, 0, newValue);\n      }\n      return newList;\n    });\n    if (indexToInsert === 0) {\n      containerRef.current.scrollTo({\n        x: 0,\n        animated: true,\n      });\n    } else if (indexToInsert === elementList.length - 1) {\n      containerRef.current.scrollLeft = containerRef.current.scrollWidth;\n    }\n  };\n\n  const removeElement = (indexOrValue, isValue = false) => {\n    if (isValue) {\n      console.log(\"aqui\");\n      setElementList((prevState) =>\n        prevState.filter((element) => element !== indexOrValue)\n      );\n    } else {\n      setElementList((prevState) => {\n        const newList = [...prevState];\n        newList.splice(indexOrValue, 1);\n        return newList;\n      });\n    }\n  };\n\n  const handleExecution = (action, actionType) => {\n    if (!isInitialized) {\n      throw new Error(\"List not initialized\");\n    }\n    if (action === \"insert\") {\n      switch (actionType) {\n        case \"start\":\n          setIndex(0)\n          setInsertButtonClicked(true);\n          searchByIndex(0);\n          break;\n        case \"end\":\n          setIndex(elementList.length - 1);\n          setInsertButtonClicked(true);\n          searchByIndex(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            setInsertButtonClicked(true);\n            searchByIndex(index);\n          } else {\n            throw new Error(\"Invalid action index\");\n          }\n          break;\n        case \"onValue\":\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    } else if (action === \"remove\") {\n      switch (actionType) {\n        case \"start\":\n          setIndex(0)\n          setRemoveButtonClicked(true);\n          searchByIndex(0);\n          break;\n        case \"end\":\n          removeElement(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            removeElement(index);\n          } else {\n            throw new Error(\"Invalid index\");\n          }\n          break;\n        case \"onValue\":\n          if (elementList.length > 0) {\n            removeElement(value, true);\n          } else {\n            throw new Error(\"Invalid Value\");\n          }\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    const mountList = () => {\n      switch (listType) {\n        case \"simple\":\n          return elementList.map((element) => {\n            const newRef = createRef();\n            return {\n              render: (\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <img src={Seta} alt=\"seta\" width=\"35px\" />\n                  <Element content={element} ref={newRef} key={uuidv4()} />\n                </div>\n\n              ),\n              ref: newRef,\n            };\n          });\n        default:\n          throw new Error(\"Invalid list type\");\n      }\n    };\n\n    setRenderedList(mountList());\n  }, [elementList, listType]);\n\n  const windowRef = useRef();\n\n  return (\n    <div className={`${className} ${styles.listPanel}`} ref={windowRef}>\n      <div\n        className=\"animateElement\"\n        style={{\n          display: showNewElement ? \"block\" : \"none\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          height: \"100%\",\n          width: \"100%\",\n          zIndex: 100,\n        }}\n      >\n        {element}\n      </div>\n      <div className={styles.listView}>\n        <h1>Simulador de Listas Encadeadas</h1>\n        <Xwrapper>\n          <div className={styles.listContainer}>\n            <div style={{\n              display: isInitialized ? \"flex\" : \"none\",\n              overflowX: \"auto\", // Add CSS to make the container scrollable horizontally\n              whiteSpace: \"nowrap\", // Prevent line breaks for the child elements\n            }}\n              ref={containerRef}>\n              <div\n                style={{ display: isInitialized ? \"flex\" : \"none\" }}\n                className={styles.listStart}\n              >\n                InÃ­cio\n              </div>\n              {renderedList.map((element, index) => (\n                <div key={index}>\n                  {currentItemIndex === index && (\n                    <div style={auxPointerStyle}>Aux</div>\n                  )}\n                  {currentItemIndex === index && (\n                    <img\n                      src={SetaVermelha}\n                      alt=\"seta\"\n                      height=\"35px\"\n                      style={auxPointerStyle}\n                    />\n                  )}\n                  {element.render}\n                </div>\n              ))}\n              <img\n                src={NullSymbol}\n                alt=\"seta\"\n                width=\"100px\"\n                style={{ marginTop: 70 }}\n                hidden={!isInitialized}\n              />\n            </div>\n          </div>\n        </Xwrapper>\n      </div>\n      <div className={styles.controlPanel}>\n        <input\n          type=\"text\"\n          placeholder=\"Insira o valor\"\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Insira o Ã­ndice\"\n          onChange={(e) => setIndex(e.target.value)}\n        />\n        <button onClick={() => setIsInitialized(true)}> Iniciar lista</button>\n        <button onClick={() => { }}> destruir lista</button>\n        <button onClick={() => handleExecution(\"insert\", \"start\")}>\n          {\" \"}\n          Inserir no inÃ­cio\n        </button>\n        <button onClick={() => handleExecution(\"insert\", \"end\")}>\n          {\" \"}\n          Inserir no fim\n        </button>\n        <button onClick={() => handleExecution(\"insert\", \"onIndex\")}>\n          {\" \"}\n          Inserir no Ã­ndice\n        </button>\n        <button onClick={() => handleExecution(\"remove\", \"onValue\")}>\n          {\" \"}\n          Remover por valor\n        </button>\n        <button onClick={() => handleExecution(\"remove\", \"onIndex\")}>\n          {\" \"}\n          Remover por Ã­ndice\n        </button>\n        <button onClick={() => searchByValue()}> Buscar Elemento</button>\n        <button onClick={() => searchByIndex()}> Buscar por Indice</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ListPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
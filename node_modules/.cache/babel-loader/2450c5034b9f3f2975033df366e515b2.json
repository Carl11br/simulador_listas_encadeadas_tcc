{"ast":null,"code":"import _slicedToArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/CodePanel/CodePanel.jsx\";\nimport styles from './CodePanel.module.css';\nimport React, { useState, useEffect } from 'react';\nimport { SimpleLinkedList, DoubleLinkedList } from './Structs/Structs';\nvar linkedLists = {\n  simpleLinkedList: [{\n    psdeudoCodigo: 'Criar um novo nó',\n    código: 'int *novoElemento = (int *)malloc(sizeof(int));'\n  }, {\n    psdeudoCodigo: 'Atribuir o novo valor ao novo elemento',\n    código: 'novoElemento->valor = novoValor;'\n  },\n  // inserção no inicio;\n  {\n    psdeudoCodigo: 'inserir o novo elemento no inicio da lista',\n    código: 'novoElemento->prox = listaInicial;<br>listaInicial = novoElemento;'\n  },\n  //inserção no final\n  {\n    psdeudoCodigo: 'Achar o final da lista e inserir o novo elemento',\n    código: 'lista *aux = listaInicial;<br>while (aux->prox != NULL) {<br>aux = aux->prox;<br>}<br>aux->prox = novoElemento;<br>novoElemento->prox = NULL;'\n  }]\n};\nfunction CodePanel(_ref) {\n  var _this = this;\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    code = _ref.code,\n    line = _ref.line,\n    listType = _ref.listType,\n    typeOfIsert = _ref.typeOfIsert,\n    _ref$delay = _ref.delay,\n    delay = _ref$delay === void 0 ? 1000 : _ref$delay;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentRunningIndex = _useState2[0],\n    setCurrentRunningIndex = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    codeToRun = _useState4[0],\n    setCodeToRun = _useState4[1];\n  useEffect(function () {\n    setCurrentRunningIndex(line || 0);\n  }, [line]);\n  useEffect(function () {\n    setCodeToRun(code || []);\n  }, [code]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(className, \" \").concat(styles.codePanel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(styles.container, \" \").concat(styles.blueBorder),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"C\\xF3digo sendo Executado\"), /*#__PURE__*/React.createElement(\"pre\", {\n    className: styles.codebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, codeToRun.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        width: '100%',\n        backgroundColor: currentRunningIndex == index ? 'yellow' : ''\n      },\n      key: \"line-\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, item);\n  }))));\n}\nexport default CodePanel;","map":{"version":3,"names":["styles","React","useState","useEffect","SimpleLinkedList","DoubleLinkedList","linkedLists","simpleLinkedList","psdeudoCodigo","código","CodePanel","_ref","_this","_ref$className","className","code","line","listType","typeOfIsert","_ref$delay","delay","_useState","_useState2","_slicedToArray","currentRunningIndex","setCurrentRunningIndex","_useState3","_useState4","codeToRun","setCodeToRun","createElement","concat","codePanel","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","container","blueBorder","codebox","map","item","index","style","width","backgroundColor","key"],"sources":["/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/CodePanel/CodePanel.jsx"],"sourcesContent":["import styles from './CodePanel.module.css';\nimport React, { useState, useEffect } from 'react';\nimport { SimpleLinkedList, DoubleLinkedList } from './Structs/Structs';\n\nconst linkedLists = {\n  simpleLinkedList: [\n    {\n      psdeudoCodigo: 'Criar um novo nó',\n      código: 'int *novoElemento = (int *)malloc(sizeof(int));',\n    },\n    {\n      psdeudoCodigo: 'Atribuir o novo valor ao novo elemento',\n      código: 'novoElemento->valor = novoValor;',\n    },\n    // inserção no inicio;\n    {\n      psdeudoCodigo: 'inserir o novo elemento no inicio da lista',\n      código:\n        'novoElemento->prox = listaInicial;<br>listaInicial = novoElemento;',\n    },\n    //inserção no final\n    {\n      psdeudoCodigo: 'Achar o final da lista e inserir o novo elemento',\n      código:\n        'lista *aux = listaInicial;<br>while (aux->prox != NULL) {<br>aux = aux->prox;<br>}<br>aux->prox = novoElemento;<br>novoElemento->prox = NULL;',\n    },\n  ],\n};\n\nfunction CodePanel({\n  className = '',\n  code,\n  line,\n  listType,\n  typeOfIsert,\n  delay = 1000,\n}) {\n  const [currentRunningIndex, setCurrentRunningIndex] = useState(0);\n  const [codeToRun, setCodeToRun] = useState([]);\n\n  useEffect(() => {\n    setCurrentRunningIndex(line || 0);\n  }, [line]);\n\n  useEffect(() => {\n    setCodeToRun(code || []);\n  }, [code]);\n\n  return (\n    <div className={`${className} ${styles.codePanel}`}>\n      <div className={`${styles.container} ${styles.blueBorder}`}>\n        <h5>Código sendo Executado</h5>\n        <pre className={styles.codebox}>\n          {codeToRun.map((item, index) => {\n            return (\n              <p\n                style={{\n                  width: '100%',\n                  backgroundColor: currentRunningIndex == index ? 'yellow' : '',\n                }}\n                key={`line-${index}`}\n              >\n                {item}\n              </p>\n            );\n          })}\n        </pre>\n      </div>\n    </div>\n  );\n}\n\nexport default CodePanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/CodePanel/CodePanel.jsx\";\nimport styles from \"./CodePanel.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { SimpleLinkedList, DoubleLinkedList } from \"./Structs/Structs\";\nvar linkedLists = {\n  simpleLinkedList: [{\n    psdeudoCodigo: \"Criar um novo nó\",\n    código: \"int *novoElemento = (int *)malloc(sizeof(int));\"\n  }, {\n    psdeudoCodigo: \"Atribuir o novo valor ao novo elemento\",\n    código: \"novoElemento->valor = novoValor;\"\n  },\n  // inserção no inicio;\n  {\n    psdeudoCodigo: \"inserir o novo elemento no inicio da lista\",\n    código: \"novoElemento->prox = listaInicial;<br>listaInicial = novoElemento;\"\n  },\n  //inserção no final\n  {\n    psdeudoCodigo: \"Achar o final da lista e inserir o novo elemento\",\n    código: \"lista *aux = listaInicial;<br>while (aux->prox != NULL) {<br>aux = aux->prox;<br>}<br>aux->prox = novoElemento;<br>novoElemento->prox = NULL;\"\n  }]\n};\nfunction CodePanel(_ref) {\n  var _this = this;\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? \"\" : _ref$className,\n    code = _ref.code,\n    listType = _ref.listType,\n    typeOfIsert = _ref.typeOfIsert,\n    _ref$delay = _ref.delay,\n    delay = _ref$delay === void 0 ? 1000 : _ref$delay;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentRunningIndex = _useState2[0],\n    setCurrentRunningIndex = _useState2[1];\n  useEffect(function () {\n    setTimeout(function () {\n      setCurrentRunningIndex(currentRunningIndex < linkedLists.simpleLinkedList.length - 1 ? currentRunningIndex + 1 : 0);\n    }, 1000);\n  }, [currentRunningIndex]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(className, \" \").concat(styles.codePanel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(styles.container, \" \").concat(styles.greenBorder),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Estrutura b\\xE1sica de uma lista\"), /*#__PURE__*/React.createElement(SimpleLinkedList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(styles.container, \" \").concat(styles.blueBorder),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Passo a Passo\"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, linkedLists.simpleLinkedList.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: index === currentRunningIndex ? \"\".concat(styles.currentRunning) : \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, item.psdeudoCodigo);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(styles.container, \" \").concat(styles.redBorder),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"C\\xF3digo Gerado\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, code)));\n}\nexport default CodePanel;","map":{"version":3,"names":["styles","React","useState","useEffect","SimpleLinkedList","DoubleLinkedList","linkedLists","simpleLinkedList","psdeudoCodigo","código","CodePanel","className","code","listType","typeOfIsert","delay","currentRunningIndex","setCurrentRunningIndex","setTimeout","length","codePanel","container","greenBorder","blueBorder","map","item","index","currentRunning","redBorder"],"sources":["/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/CodePanel/CodePanel.jsx"],"sourcesContent":["import styles from \"./CodePanel.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { SimpleLinkedList, DoubleLinkedList } from \"./Structs/Structs\";\n\nconst linkedLists = {\n  simpleLinkedList: [\n    {\n      psdeudoCodigo: \"Criar um novo nó\",\n      código: \"int *novoElemento = (int *)malloc(sizeof(int));\",\n    },\n    {\n      psdeudoCodigo: \"Atribuir o novo valor ao novo elemento\",\n      código: \"novoElemento->valor = novoValor;\",\n    },\n    // inserção no inicio;\n    {\n      psdeudoCodigo: \"inserir o novo elemento no inicio da lista\",\n      código:\n        \"novoElemento->prox = listaInicial;<br>listaInicial = novoElemento;\",\n    },\n    //inserção no final\n    {\n      psdeudoCodigo: \"Achar o final da lista e inserir o novo elemento\",\n      código:\n        \"lista *aux = listaInicial;<br>while (aux->prox != NULL) {<br>aux = aux->prox;<br>}<br>aux->prox = novoElemento;<br>novoElemento->prox = NULL;\",\n    },\n  ],\n};\n\nfunction CodePanel({\n  className = \"\",\n  code,\n  listType,\n  typeOfIsert,\n  delay = 1000,\n}) {\n  const [currentRunningIndex, setCurrentRunningIndex] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCurrentRunningIndex(\n        currentRunningIndex < linkedLists.simpleLinkedList.length - 1\n          ? currentRunningIndex + 1\n          : 0\n      );\n    }, 1000);\n  }, [currentRunningIndex]);\n\n  return (\n    <div className={`${className} ${styles.codePanel}`}>\n      <div className={`${styles.container} ${styles.greenBorder}`}>\n        <h5>Estrutura básica de uma lista</h5>\n        <SimpleLinkedList />\n      </div>\n      <div className={`${styles.container} ${styles.blueBorder}`}>\n        <h5>Passo a Passo</h5>\n        <ol>\n          {linkedLists.simpleLinkedList.map((item, index) => {\n            return (\n              <li\n                className={\n                  index === currentRunningIndex\n                    ? `${styles.currentRunning}`\n                    : \"\"\n                }\n              >\n                {item.psdeudoCodigo}\n              </li>\n            );\n          })}\n        </ol>\n      </div>\n      <div className={`${styles.container} ${styles.redBorder}`}>\n        <h5>Código Gerado</h5>\n        <p>{code}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default CodePanel;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,mBAAmB;AAEtE,IAAMC,WAAW,GAAG;EAClBC,gBAAgB,EAAE,CAChB;IACEC,aAAa,EAAE,kBAAkB;IACjCC,MAAM,EAAE;EACV,CAAC,EACD;IACED,aAAa,EAAE,wCAAwC;IACvDC,MAAM,EAAE;EACV,CAAC;EACD;EACA;IACED,aAAa,EAAE,4CAA4C;IAC3DC,MAAM,EACJ;EACJ,CAAC;EACD;EACA;IACED,aAAa,EAAE,kDAAkD;IACjEC,MAAM,EACJ;EACJ,CAAC;AAEL,CAAC;AAED,SAASC,SAAS,OAMf;EAAA;EAAA,0BALDC,SAAS;IAATA,SAAS,+BAAG,EAAE;IACdC,IAAI,QAAJA,IAAI;IACJC,QAAQ,QAARA,QAAQ;IACRC,WAAW,QAAXA,WAAW;IAAA,kBACXC,KAAK;IAALA,KAAK,2BAAG,IAAI;EAAA,gBAE0Cb,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA1Dc,mBAAmB;IAAEC,sBAAsB;EAElDd,SAAS,CAAC,YAAM;IACde,UAAU,CAAC,YAAM;MACfD,sBAAsB,CACpBD,mBAAmB,GAAGV,WAAW,CAACC,gBAAgB,CAACY,MAAM,GAAG,CAAC,GACzDH,mBAAmB,GAAG,CAAC,GACvB,CAAC,CACN;IACH,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;EAEzB,oBACE;IAAK,SAAS,YAAKL,SAAS,cAAIX,MAAM,CAACoB,SAAS,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjD;IAAK,SAAS,YAAKpB,MAAM,CAACqB,SAAS,cAAIrB,MAAM,CAACsB,WAAW,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC1D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,kCAA6B,CAAK,eACtC,oBAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChB,eACN;IAAK,SAAS,YAAKtB,MAAM,CAACqB,SAAS,cAAIrB,MAAM,CAACuB,UAAU,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,eAAa,CAAK,eACtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGjB,WAAW,CAACC,gBAAgB,CAACiB,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;IACjD,oBACE;MACE,SAAS,EACPA,KAAK,KAAKV,mBAAmB,aACtBhB,MAAM,CAAC2B,cAAc,IACxB,EACL;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEAF,IAAI,CAACjB,aAAa,CAChB;EAET,CAAC,CAAC,CACC,CACD,eACN;IAAK,SAAS,YAAKR,MAAM,CAACqB,SAAS,cAAIrB,MAAM,CAAC4B,SAAS,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,kBAAa,CAAK,eACtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIhB,IAAI,CAAK,CACT,CACF;AAEV;AAEA,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}
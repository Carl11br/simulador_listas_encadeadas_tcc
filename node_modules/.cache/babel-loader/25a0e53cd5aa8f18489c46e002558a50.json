{"ast":null,"code":"import _toConsumableArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/ListPanel/ListPanel.jsx\";\nimport React, { useState, useRef, useEffect, createRef } from \"react\";\nimport styles from \"./ListPanel.module.css\";\nimport Element from \"../ListElement\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Seta from \"../../Seta.svg\";\nimport ControlPanel from \"../ControlPanel\";\nimport NullSymbol from \"../../NullSymbol.svg\";\nimport Xarrow, { Xwrapper, useXarrow } from \"react-xarrows\";\nimport { ScrollView } from \"react-native\";\nimport ArrowWithText from \"../AuxArrow/AuxArrow\";\nvar ListPanel = function ListPanel(_ref) {\n  var _ref$className = _ref.className,\n    className = _ref$className === void 0 ? \"\" : _ref$className,\n    _ref$listType = _ref.listType,\n    listType = _ref$listType === void 0 ? \"simple\" : _ref$listType;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    elementList = _useState2[0],\n    setElementList = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    renderedList = _useState4[0],\n    setRenderedList = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isInitialized = _useState6[0],\n    setIsInitialized = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    value = _useState8[0],\n    setValue = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    index = _useState10[0],\n    setIndex = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    element = _useState12[0],\n    setElement = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showNewElement = _useState14[0],\n    setShowNewElement = _useState14[1];\n  var scrollRef = useRef();\n  var style = {\n    initialPosition: function initialPosition(inRelationToElementRef) {\n      console.log(inRelationToElementRef);\n      return {\n        display: \"block\",\n        position: \"absolute\",\n        top: \"\".concat(inRelationToElementRef.current ? inRelationToElementRef.current.getBoundingClientRect().top + inRelationToElementRef.current.getBoundingClientRect().height + 30 : 0, \"px\"),\n        left: \"\".concat(inRelationToElementRef.current ? inRelationToElementRef.current.getBoundingClientRect().left : 0, \"px\")\n      };\n    },\n    move: {}\n  };\n  var insertElement = function insertElement(indexToInsert, newValue) {\n    setElementList(function (prevState) {\n      var newList = _toConsumableArray(prevState);\n      if (indexToInsert === elementList.length - 1) {\n        newList.push(newValue);\n      } else {\n        newList.splice(indexToInsert, 0, newValue);\n      }\n      return newList;\n    });\n    if (indexToInsert === 0) {\n      scrollRef.current.scrollTo({\n        x: 0,\n        animated: true\n      });\n    } else if (indexToInsert === elementList.length - 1) {\n      scrollRef.current.scrollToEnd({\n        animated: true\n      });\n    }\n    // setShowNewElement(true);\n    // setElement(\n    //   <Element\n    //     content={element}\n    //     style={style.initialPosition(renderedList[0].ref)}\n    //     key={uuidv4()}\n    //   />\n    // );\n  };\n\n  var removeElement = function removeElement(indexOrValue) {\n    var isValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (isValue) {\n      console.log(\"aqui\");\n      setElementList(function (prevState) {\n        return prevState.filter(function (element) {\n          return element !== indexOrValue;\n        });\n      });\n    } else {\n      setElementList(function (prevState) {\n        var newList = _toConsumableArray(prevState);\n        newList.splice(indexOrValue, 1);\n        return newList;\n      });\n    }\n  };\n  var handleExecution = function handleExecution(action, actionType) {\n    if (!isInitialized) {\n      throw new Error(\"List not initialized\");\n    }\n    if (action === \"insert\") {\n      switch (actionType) {\n        case \"start\":\n          insertElement(0, value);\n          break;\n        case \"end\":\n          insertElement(elementList.length - 1, value);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            insertElement(index, value);\n          } else {\n            throw new Error(\"Invalid action index\");\n          }\n          break;\n        case \"onValue\":\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    } else if (action === \"remove\") {\n      switch (actionType) {\n        case \"start\":\n          removeElement(0);\n          break;\n        case \"end\":\n          removeElement(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            removeElement(index);\n          } else {\n            throw new Error(\"Invalid index\");\n          }\n          break;\n        case \"onValue\":\n          if (elementList.length > 0) {\n            removeElement(value, true);\n          } else {\n            throw new Error(\"Invalid Value\");\n          }\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    } else if (action === \"search\") {\n      ArrowWithText(renderedList);\n    }\n  };\n  useEffect(function () {\n    var mountList = function mountList() {\n      switch (listType) {\n        case \"simple\":\n          return elementList.map(function (element) {\n            var newRef = createRef();\n            return {\n              render: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n                src: Seta,\n                alt: \"seta\",\n                width: \"35px\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }\n              }), /*#__PURE__*/React.createElement(Element, {\n                content: element,\n                ref: newRef,\n                key: uuidv4(),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }\n              })),\n              ref: newRef\n            };\n          });\n        default:\n          throw new Error(\"Invalid list type\");\n      }\n    };\n    setRenderedList(mountList());\n  }, [elementList, listType]);\n  var windowRef = useRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(className, \" \").concat(styles.listPanel),\n    ref: windowRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animateElement\",\n    style: {\n      display: showNewElement ? \"block\" : \"none\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      height: \"100%\",\n      width: \"100%\",\n      zIndex: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, element), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, \"Simulador de Listas Encadeadas\"), /*#__PURE__*/React.createElement(Xwrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ScrollView, {\n    horizontal: true,\n    ref: scrollRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: isInitialized ? \"flex\" : \"none\"\n    },\n    className: styles.listStart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"In\\xEDcio\"), renderedList.map(function (element, index) {\n    return element.render;\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: NullSymbol,\n    alt: \"seta\",\n    width: \"100px\",\n    style: {\n      marginTop: 70\n    },\n    hidden: !isInitialized,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.controlPanel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Insira o valor\",\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Insira o \\xEDndice\",\n    onChange: function onChange(e) {\n      return setIndex(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setIsInitialized(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, \" Iniciar lista\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, \" destruir lista\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"start\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no in\\xEDcio\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"end\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no fim\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"insert\", \"onIndex\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, \" \", \"Inserir no \\xEDndice\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"remove\", \"onValue\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, \" \", \"Remover por valor\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution(\"remove\", \"onIndex\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, \" \", \"Remover por \\xEDndice\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleExecution('search', 'onValue');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, \" Buscar Elemento\")));\n};\nexport default ListPanel;","map":{"version":3,"names":["React","useState","useRef","useEffect","createRef","styles","Element","v4","uuidv4","ControlPanel","Xarrow","Xwrapper","useXarrow","ScrollView","ArrowWithText","ListPanel","className","listType","elementList","setElementList","renderedList","setRenderedList","isInitialized","setIsInitialized","value","setValue","index","setIndex","element","setElement","showNewElement","setShowNewElement","scrollRef","style","initialPosition","inRelationToElementRef","console","log","display","position","top","current","getBoundingClientRect","height","left","move","insertElement","indexToInsert","newValue","prevState","newList","length","push","splice","scrollTo","x","animated","scrollToEnd","removeElement","indexOrValue","isValue","filter","handleExecution","action","actionType","Error","mountList","map","newRef","render","Seta","ref","windowRef","listPanel","width","zIndex","listView","listContainer","listStart","NullSymbol","marginTop","controlPanel","e","target"],"sources":["/home/carloslm/Documents/GitHub/simulador_de_listas_encadeadas/src/components/ListPanel/ListPanel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, createRef } from \"react\";\nimport styles from \"./ListPanel.module.css\";\nimport Element from \"../ListElement\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Seta from \"../../Seta.svg\";\nimport ControlPanel from \"../ControlPanel\";\nimport NullSymbol from \"../../NullSymbol.svg\";\nimport Xarrow, { Xwrapper, useXarrow } from \"react-xarrows\";\nimport { ScrollView } from \"react-native\";\nimport ArrowWithText from \"../AuxArrow/AuxArrow\";\n\nconst ListPanel = ({ className = \"\", listType = \"simple\" }) => {\n  const [elementList, setElementList] = useState([]);\n  const [renderedList, setRenderedList] = useState([]);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [index, setIndex] = useState(\"\");\n  const [element, setElement] = useState();\n  const [showNewElement, setShowNewElement] = useState(false);\n\n  const scrollRef = useRef();\n\n  const style = {\n    initialPosition: (inRelationToElementRef) => {\n      console.log(inRelationToElementRef);\n      return {\n        display: \"block\",\n        position: \"absolute\",\n        top: `${\n          inRelationToElementRef.current\n            ? inRelationToElementRef.current.getBoundingClientRect().top +\n              inRelationToElementRef.current.getBoundingClientRect().height +\n              30\n            : 0\n        }px`,\n        left: `${\n          inRelationToElementRef.current\n            ? inRelationToElementRef.current.getBoundingClientRect().left\n            : 0\n        }px`,\n      };\n    },\n    move: {},\n  };\n\n  const insertElement = (indexToInsert, newValue) => {\n    setElementList((prevState) => {\n      const newList = [...prevState];\n      if (indexToInsert === elementList.length - 1) {\n        newList.push(newValue);\n      } else {\n        newList.splice(indexToInsert, 0, newValue);\n      }\n      return newList;\n    });\n    if (indexToInsert === 0) {\n      scrollRef.current.scrollTo({\n        x: 0,\n        animated: true,\n      });\n    } else if (indexToInsert === elementList.length - 1) {\n      scrollRef.current.scrollToEnd({ animated: true });\n    }\n    // setShowNewElement(true);\n    // setElement(\n    //   <Element\n    //     content={element}\n    //     style={style.initialPosition(renderedList[0].ref)}\n    //     key={uuidv4()}\n    //   />\n    // );\n  };\n\n  const removeElement = (indexOrValue, isValue = false) => {\n    if (isValue) {\n      console.log(\"aqui\");\n      setElementList((prevState) =>\n        prevState.filter((element) => element !== indexOrValue)\n      );\n    } else {\n      setElementList((prevState) => {\n        const newList = [...prevState];\n        newList.splice(indexOrValue, 1);\n        return newList;\n      });\n    }\n  };\n\n  const handleExecution = (action, actionType) => {\n    if (!isInitialized) {\n      throw new Error(\"List not initialized\");\n    }\n    if (action === \"insert\") {\n      switch (actionType) {\n        case \"start\":\n          insertElement(0, value);\n          break;\n        case \"end\":\n          insertElement(elementList.length - 1, value);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            insertElement(index, value);\n          } else {\n            throw new Error(\"Invalid action index\");\n          }\n          break;\n        case \"onValue\":\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    } else if (action === \"remove\") {\n      switch (actionType) {\n        case \"start\":\n          removeElement(0);\n          break;\n        case \"end\":\n          removeElement(elementList.length - 1);\n          break;\n        case \"onIndex\":\n          if (index >= 0 && index <= elementList.length - 1) {\n            removeElement(index);\n          } else {\n            throw new Error(\"Invalid index\");\n          }\n          break;\n        case \"onValue\":\n          if (elementList.length > 0) {\n            removeElement(value, true);\n          } else {\n            throw new Error(\"Invalid Value\");\n          }\n          break;\n        default:\n          throw new Error(\"Invalid action index\");\n      }\n    } else if (action === \"search\") {\n      ArrowWithText(renderedList)\n    }\n  };\n\n  useEffect(() => {\n    const mountList = () => {\n      switch (listType) {\n        case \"simple\":\n          return elementList.map((element) => {\n            const newRef = createRef();\n            return {\n              render: (\n                <>\n                  <img src={Seta} alt=\"seta\" width=\"35px\" />\n                  <Element content={element} ref={newRef} key={uuidv4()} />\n                </>\n              ),\n              ref: newRef,\n            };\n          });\n        default:\n          throw new Error(\"Invalid list type\");\n      }\n    };\n\n    setRenderedList(mountList());\n  }, [elementList, listType]);\n\n  const windowRef = useRef();\n\n  return (\n    <div className={`${className} ${styles.listPanel}`} ref={windowRef}>\n      <div\n        className=\"animateElement\"\n        style={{\n          display: showNewElement ? \"block\" : \"none\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          height: \"100%\",\n          width: \"100%\",\n          zIndex: 100,\n        }}\n      >\n        {element}\n      </div>\n      <div className={styles.listView}>\n        <h1>Simulador de Listas Encadeadas</h1>\n        <Xwrapper>\n          <div className={styles.listContainer}>\n            <ScrollView horizontal={true} ref={scrollRef}>\n              <div\n                style={{ display: isInitialized ? \"flex\" : \"none\" }}\n                className={styles.listStart}\n              >\n                Início\n              </div>\n              {renderedList.map((element, index) => {\n                return element.render;\n              })}\n              <img\n                src={NullSymbol}\n                alt=\"seta\"\n                width=\"100px\"\n                style={{ marginTop: 70 }}\n                hidden={!isInitialized}\n              />\n            </ScrollView>\n          </div>\n        </Xwrapper>\n      </div>\n      <div className={styles.controlPanel}>\n        <input\n          type=\"text\"\n          placeholder=\"Insira o valor\"\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Insira o índice\"\n          onChange={(e) => setIndex(e.target.value)}\n        />\n        <button onClick={() => setIsInitialized(true)}> Iniciar lista</button>\n        <button onClick={() => {}}> destruir lista</button>\n        <button onClick={() => handleExecution(\"insert\", \"start\")}>\n          {\" \"}\n          Inserir no início\n        </button>\n        <button onClick={() => handleExecution(\"insert\", \"end\")}>\n          {\" \"}\n          Inserir no fim\n        </button>\n        <button onClick={() => handleExecution(\"insert\", \"onIndex\")}>\n          {\" \"}\n          Inserir no índice\n        </button>\n        <button onClick={() => handleExecution(\"remove\", \"onValue\")}>\n          {\" \"}\n          Remover por valor\n        </button>\n        <button onClick={() => handleExecution(\"remove\", \"onIndex\")}>\n          {\" \"}\n          Remover por índice\n        </button>\n        <button onClick={() => handleExecution('search', 'onValue')}> Buscar Elemento</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ListPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}